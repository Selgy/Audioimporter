"use strict";var exports = typeof exports === "undefined" ? {} : exports;;const o=typeof cep_node !== 'undefined'?cep_node.require(cep_node.global["__dir"+"name"] + "/assets/bolt-7ac16f3b.js"):require("../assets/bolt-7ac16f3b.js"),{spawn:f}=require("child_process"),p=require("path"),E=require("fs");function x(){if(console.log("Starting Rust server..."),typeof process<"u"&&process.versions!=null&&process.versions.node!=null){console.log("Node.js environment detected. Node version:",process.version);const e="E:\\DEV\\AudioImporter\\src\\target\\release\\audio_importer.exe";if(console.log("Rust executable path:",e),!E.existsSync(e)){console.error(`Rust executable not found at ${e}`);return}const c=f(e,[],{cwd:p.dirname(e),env:process.env,stdio:"inherit"});c.on("error",n=>{console.error(`Failed to start Rust server: ${n}`)}),c.on("close",n=>{n!==0?console.error(`Rust server process exited with code ${n}`):console.log("Rust server process exited successfully")})}else console.error("This script should only be run in a Node.js environment.")}console.log("Background script loaded. Starting Rust server...");x();console.log("main.tsx is being executed");const R=()=>{const e=o.reactExports.useRef(null);o.reactExports.useRef({});const[c,n]=o.reactExports.useState({}),[b,l]=o.reactExports.useState([]);o.reactExports.useState(!1);const[u,v]=o.reactExports.useState(!1);o.reactExports.useRef(u),o.reactExports.useRef(null),o.reactExports.useEffect(()=>(console.log("useEffect hook is running"),i(),()=>{e.current&&e.current.close()}),[]);const i=o.reactExports.useCallback(()=>{if(e.current&&e.current.readyState===WebSocket.OPEN){s("WebSocket already connected");return}s("Establishing WebSocket connection..."),e.current=new WebSocket("ws://localhost:7878"),e.current.onopen=()=>{s("Connected to Rust server"),a()},e.current.onmessage=r=>{const t=r.data;if(s(`Received message: ${t}`),typeof t=="string"&&t.startsWith("CONFIG:")){const g=JSON.parse(t.replace("CONFIG:",""));n(g),s("Config loaded successfully from server")}},e.current.onerror=r=>{s(`WebSocket Error: ${r instanceof ErrorEvent?r.message:"Unknown error"}`)},e.current.onclose=r=>{s(`Disconnected from Rust server: ${r.reason}`),setTimeout(i,5e3)}},[]),s=r=>{console.log("Debug log:",r),l(t=>[...t,r])},a=()=>{var r;try{(r=e.current)==null||r.send("LOAD_CONFIG")}catch(t){console.error("Error loading config:",t),d(`Error loading config: ${t}`)}},d=r=>{window.electron&&window.electron.ipcRenderer&&window.electron.ipcRenderer.send("background-log",r)};return null};o.initBolt();o.client.createRoot(document.getElementById("root")).render(o.jsx(o.React.StrictMode,{children:o.jsx(R,{})}));
//# sourceMappingURL=settings-7c936e36.js.map
