{"version":3,"file":"main-cdd4aa4b.js","sources":["../../../src/js/lib/cep/csinterface.js","../../../src/js/lib/cep/vulcan.js","../../../cep.config.ts","../../../src/shared/shared.ts","../../../src/js/lib/cep/node.ts","../../../src/js/lib/utils/bolt.ts","../../../src/js/main/main.tsx","../../../src/js/main/index.tsx"],"sourcesContent":["/**************************************************************************************************\r\n *\r\n * ADOBE SYSTEMS INCORPORATED\r\n * Copyright 2020 Adobe Systems Incorporated\r\n * All Rights Reserved.\r\n *\r\n * NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the\r\n * terms of the Adobe license agreement accompanying it.  If you have received this file from a\r\n * source other than Adobe, then your use, modification, or distribution of it requires the prior\r\n * written permission of Adobe.\r\n *\r\n **************************************************************************************************/\r\n\r\n/** CSInterface - v11.0.0 */\r\n\r\n/**\r\n * Stores constants for the window types supported by the CSXS infrastructure.\r\n */\r\nfunction CSXSWindowType() {}\r\n\r\n/** Constant for the CSXS window type Panel. */\r\nCSXSWindowType._PANEL = \"Panel\";\r\n\r\n/** Constant for the CSXS window type Modeless. */\r\nCSXSWindowType._MODELESS = \"Modeless\";\r\n\r\n/** Constant for the CSXS window type ModalDialog. */\r\nCSXSWindowType._MODAL_DIALOG = \"ModalDialog\";\r\n\r\n/** EvalScript error message */\r\nlet EvalScript_ErrMessage = \"EvalScript error.\";\r\n\r\n/**\r\n * @class Version\r\n * Defines a version number with major, minor, micro, and special\r\n * components. The major, minor and micro values are numeric; the special\r\n * value can be any string.\r\n *\r\n * @param major   The major version component, a positive integer up to nine digits long.\r\n * @param minor   The minor version component, a positive integer up to nine digits long.\r\n * @param micro   The micro version component, a positive integer up to nine digits long.\r\n * @param special The special version component, an arbitrary string.\r\n *\r\n * @return A new \\c Version object.\r\n */\r\nfunction Version(major, minor, micro, special) {\r\n  this.major = major;\r\n  this.minor = minor;\r\n  this.micro = micro;\r\n  this.special = special;\r\n}\r\n\r\n/**\r\n * The maximum value allowed for a numeric version component.\r\n * This reflects the maximum value allowed in PlugPlug and the manifest schema.\r\n */\r\nVersion.MAX_NUM = 999999999;\r\n\r\n/**\r\n * @class VersionBound\r\n * Defines a boundary for a version range, which associates a \\c Version object\r\n * with a flag for whether it is an inclusive or exclusive boundary.\r\n *\r\n * @param version   The \\c #Version object.\r\n * @param inclusive True if this boundary is inclusive, false if it is exclusive.\r\n *\r\n * @return A new \\c VersionBound object.\r\n */\r\nfunction VersionBound(version, inclusive) {\r\n  this.version = version;\r\n  this.inclusive = inclusive;\r\n}\r\n\r\n/**\r\n * @class VersionRange\r\n * Defines a range of versions using a lower boundary and optional upper boundary.\r\n *\r\n * @param lowerBound The \\c #VersionBound object.\r\n * @param upperBound The \\c #VersionBound object, or null for a range with no upper boundary.\r\n *\r\n * @return A new \\c VersionRange object.\r\n */\r\nfunction VersionRange(lowerBound, upperBound) {\r\n  this.lowerBound = lowerBound;\r\n  this.upperBound = upperBound;\r\n}\r\n\r\n/**\r\n * @class Runtime\r\n * Represents a runtime related to the CEP infrastructure.\r\n * Extensions can declare dependencies on particular\r\n * CEP runtime versions in the extension manifest.\r\n *\r\n * @param name    The runtime name.\r\n * @param version A \\c #VersionRange object that defines a range of valid versions.\r\n *\r\n * @return A new \\c Runtime object.\r\n */\r\nfunction Runtime(name, versionRange) {\r\n  this.name = name;\r\n  this.versionRange = versionRange;\r\n}\r\n\r\n/**\r\n * @class Extension\r\n * Encapsulates a CEP-based extension to an Adobe application.\r\n *\r\n * @param id              The unique identifier of this extension.\r\n * @param name            The localizable display name of this extension.\r\n * @param mainPath        The path of the \"index.html\" file.\r\n * @param basePath        The base path of this extension.\r\n * @param windowType          The window type of the main window of this extension.\r\n\t\t\t\t  Valid values are defined by \\c #CSXSWindowType.\r\n * @param width           The default width in pixels of the main window of this extension.\r\n * @param height          The default height in pixels of the main window of this extension.\r\n * @param minWidth        The minimum width in pixels of the main window of this extension.\r\n * @param minHeight       The minimum height in pixels of the main window of this extension.\r\n * @param maxWidth        The maximum width in pixels of the main window of this extension.\r\n * @param maxHeight       The maximum height in pixels of the main window of this extension.\r\n * @param defaultExtensionDataXml The extension data contained in the default \\c ExtensionDispatchInfo section of the extension manifest.\r\n * @param specialExtensionDataXml The extension data contained in the application-specific \\c ExtensionDispatchInfo section of the extension manifest.\r\n * @param requiredRuntimeList     An array of \\c Runtime objects for runtimes required by this extension.\r\n * @param isAutoVisible       True if this extension is visible on loading.\r\n * @param isPluginExtension   True if this extension has been deployed in the Plugins folder of the host application.\r\n *\r\n * @return A new \\c Extension object.\r\n */\r\nfunction Extension(\r\n  id,\r\n  name,\r\n  mainPath,\r\n  basePath,\r\n  windowType,\r\n  width,\r\n  height,\r\n  minWidth,\r\n  minHeight,\r\n  maxWidth,\r\n  maxHeight,\r\n  defaultExtensionDataXml,\r\n  specialExtensionDataXml,\r\n  requiredRuntimeList,\r\n  isAutoVisible,\r\n  isPluginExtension\r\n) {\r\n  this.id = id;\r\n  this.name = name;\r\n  this.mainPath = mainPath;\r\n  this.basePath = basePath;\r\n  this.windowType = windowType;\r\n  this.width = width;\r\n  this.height = height;\r\n  this.minWidth = minWidth;\r\n  this.minHeight = minHeight;\r\n  this.maxWidth = maxWidth;\r\n  this.maxHeight = maxHeight;\r\n  this.defaultExtensionDataXml = defaultExtensionDataXml;\r\n  this.specialExtensionDataXml = specialExtensionDataXml;\r\n  this.requiredRuntimeList = requiredRuntimeList;\r\n  this.isAutoVisible = isAutoVisible;\r\n  this.isPluginExtension = isPluginExtension;\r\n}\r\n\r\n/**\r\n * @class CSEvent\r\n * A standard JavaScript event, the base class for CEP events.\r\n *\r\n * @param type        The name of the event type.\r\n * @param scope       The scope of event, can be \"GLOBAL\" or \"APPLICATION\".\r\n * @param appId       The unique identifier of the application that generated the event.\r\n * @param extensionId     The unique identifier of the extension that generated the event.\r\n *\r\n * @return A new \\c CSEvent object\r\n */\r\nfunction CSEvent(type, scope, appId, extensionId) {\r\n  this.type = type;\r\n  this.scope = scope;\r\n  this.appId = appId;\r\n  this.extensionId = extensionId;\r\n}\r\n\r\n/** Event-specific data. */\r\nCSEvent.prototype.data = \"\";\r\n\r\n/**\r\n * @class SystemPath\r\n * Stores operating-system-specific location constants for use in the\r\n * \\c #CSInterface.getSystemPath() method.\r\n * @return A new \\c SystemPath object.\r\n */\r\nfunction SystemPath() {}\r\n\r\n/** The path to user data.  */\r\nSystemPath.USER_DATA = \"userData\";\r\n\r\n/** The path to common files for Adobe applications.  */\r\nSystemPath.COMMON_FILES = \"commonFiles\";\r\n\r\n/** The path to the user's default document folder.  */\r\nSystemPath.MY_DOCUMENTS = \"myDocuments\";\r\n\r\n/** @deprecated. Use \\c #SystemPath.Extension.  */\r\nSystemPath.APPLICATION = \"application\";\r\n\r\n/** The path to current extension.  */\r\nSystemPath.EXTENSION = \"extension\";\r\n\r\n/** The path to hosting application's executable.  */\r\nSystemPath.HOST_APPLICATION = \"hostApplication\";\r\n\r\n/**\r\n * @class ColorType\r\n * Stores color-type constants.\r\n */\r\nfunction ColorType() {}\r\n\r\n/** RGB color type. */\r\nColorType.RGB = \"rgb\";\r\n\r\n/** Gradient color type. */\r\nColorType.GRADIENT = \"gradient\";\r\n\r\n/** Null color type. */\r\nColorType.NONE = \"none\";\r\n\r\n/**\r\n * @class RGBColor\r\n * Stores an RGB color with red, green, blue, and alpha values.\r\n * All values are in the range [0.0 to 255.0]. Invalid numeric values are\r\n * converted to numbers within this range.\r\n *\r\n * @param red   The red value, in the range [0.0 to 255.0].\r\n * @param green The green value, in the range [0.0 to 255.0].\r\n * @param blue  The blue value, in the range [0.0 to 255.0].\r\n * @param alpha The alpha (transparency) value, in the range [0.0 to 255.0].\r\n *      The default, 255.0, means that the color is fully opaque.\r\n *\r\n * @return A new RGBColor object.\r\n */\r\nfunction RGBColor(red, green, blue, alpha) {\r\n  this.red = red;\r\n  this.green = green;\r\n  this.blue = blue;\r\n  this.alpha = alpha;\r\n}\r\n\r\n/**\r\n * @class Direction\r\n * A point value  in which the y component is 0 and the x component\r\n * is positive or negative for a right or left direction,\r\n * or the x component is 0 and the y component is positive or negative for\r\n * an up or down direction.\r\n *\r\n * @param x     The horizontal component of the point.\r\n * @param y     The vertical component of the point.\r\n *\r\n * @return A new \\c Direction object.\r\n */\r\nfunction Direction(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n/**\r\n * @class GradientStop\r\n * Stores gradient stop information.\r\n *\r\n * @param offset   The offset of the gradient stop, in the range [0.0 to 1.0].\r\n * @param rgbColor The color of the gradient at this point, an \\c #RGBColor object.\r\n *\r\n * @return GradientStop object.\r\n */\r\nfunction GradientStop(offset, rgbColor) {\r\n  this.offset = offset;\r\n  this.rgbColor = rgbColor;\r\n}\r\n\r\n/**\r\n  * @class GradientColor\r\n  * Stores gradient color information.\r\n  *\r\n  * @param type          The gradient type, must be \"linear\".\r\n  * @param direction     A \\c #Direction object for the direction of the gradient\r\n\t\t\t\t (up, down, right, or left).\r\n  * @param numStops          The number of stops in the gradient.\r\n  * @param gradientStopList  An array of \\c #GradientStop objects.\r\n  *\r\n  * @return A new \\c GradientColor object.\r\n  */\r\nfunction GradientColor(type, direction, numStops, arrGradientStop) {\r\n  this.type = type;\r\n  this.direction = direction;\r\n  this.numStops = numStops;\r\n  this.arrGradientStop = arrGradientStop;\r\n}\r\n\r\n/**\r\n  * @class UIColor\r\n  * Stores color information, including the type, anti-alias level, and specific color\r\n  * values in a color object of an appropriate type.\r\n  *\r\n  * @param type          The color type, 1 for \"rgb\" and 2 for \"gradient\".\r\n\t\t\t\t The supplied color object must correspond to this type.\r\n  * @param antialiasLevel    The anti-alias level constant.\r\n  * @param color         A \\c #RGBColor or \\c #GradientColor object containing specific color information.\r\n  *\r\n  * @return A new \\c UIColor object.\r\n  */\r\nfunction UIColor(type, antialiasLevel, color) {\r\n  this.type = type;\r\n  this.antialiasLevel = antialiasLevel;\r\n  this.color = color;\r\n}\r\n\r\n/**\r\n * @class AppSkinInfo\r\n * Stores window-skin properties, such as color and font. All color parameter values are \\c #UIColor objects except that systemHighlightColor is \\c #RGBColor object.\r\n *\r\n * @param baseFontFamily        The base font family of the application.\r\n * @param baseFontSize          The base font size of the application.\r\n * @param appBarBackgroundColor     The application bar background color.\r\n * @param panelBackgroundColor      The background color of the extension panel.\r\n * @param appBarBackgroundColorSRGB     The application bar background color, as sRGB.\r\n * @param panelBackgroundColorSRGB      The background color of the extension panel, as sRGB.\r\n * @param systemHighlightColor          The highlight color of the extension panel, if provided by the host application. Otherwise, the operating-system highlight color.\r\n *\r\n * @return AppSkinInfo object.\r\n */\r\nfunction AppSkinInfo(\r\n  baseFontFamily,\r\n  baseFontSize,\r\n  appBarBackgroundColor,\r\n  panelBackgroundColor,\r\n  appBarBackgroundColorSRGB,\r\n  panelBackgroundColorSRGB,\r\n  systemHighlightColor\r\n) {\r\n  this.baseFontFamily = baseFontFamily;\r\n  this.baseFontSize = baseFontSize;\r\n  this.appBarBackgroundColor = appBarBackgroundColor;\r\n  this.panelBackgroundColor = panelBackgroundColor;\r\n  this.appBarBackgroundColorSRGB = appBarBackgroundColorSRGB;\r\n  this.panelBackgroundColorSRGB = panelBackgroundColorSRGB;\r\n  this.systemHighlightColor = systemHighlightColor;\r\n}\r\n\r\n/**\r\n * @class HostEnvironment\r\n * Stores information about the environment in which the extension is loaded.\r\n *\r\n * @param appName   The application's name.\r\n * @param appVersion    The application's version.\r\n * @param appLocale The application's current license locale.\r\n * @param appUILocale   The application's current UI locale.\r\n * @param appId     The application's unique identifier.\r\n * @param isAppOnline  True if the application is currently online.\r\n * @param appSkinInfo   An \\c #AppSkinInfo object containing the application's default color and font styles.\r\n *\r\n * @return A new \\c HostEnvironment object.\r\n */\r\nfunction HostEnvironment(\r\n  appName,\r\n  appVersion,\r\n  appLocale,\r\n  appUILocale,\r\n  appId,\r\n  isAppOnline,\r\n  appSkinInfo\r\n) {\r\n  this.appName = appName;\r\n  this.appVersion = appVersion;\r\n  this.appLocale = appLocale;\r\n  this.appUILocale = appUILocale;\r\n  this.appId = appId;\r\n  this.isAppOnline = isAppOnline;\r\n  this.appSkinInfo = appSkinInfo;\r\n}\r\n\r\n/**\r\n * @class HostCapabilities\r\n * Stores information about the host capabilities.\r\n *\r\n * @param EXTENDED_PANEL_MENU True if the application supports panel menu.\r\n * @param EXTENDED_PANEL_ICONS True if the application supports panel icon.\r\n * @param DELEGATE_APE_ENGINE True if the application supports delegated APE engine.\r\n * @param SUPPORT_HTML_EXTENSIONS True if the application supports HTML extensions.\r\n * @param DISABLE_FLASH_EXTENSIONS True if the application disables FLASH extensions.\r\n *\r\n * @return A new \\c HostCapabilities object.\r\n */\r\nfunction HostCapabilities(\r\n  EXTENDED_PANEL_MENU,\r\n  EXTENDED_PANEL_ICONS,\r\n  DELEGATE_APE_ENGINE,\r\n  SUPPORT_HTML_EXTENSIONS,\r\n  DISABLE_FLASH_EXTENSIONS\r\n) {\r\n  this.EXTENDED_PANEL_MENU = EXTENDED_PANEL_MENU;\r\n  this.EXTENDED_PANEL_ICONS = EXTENDED_PANEL_ICONS;\r\n  this.DELEGATE_APE_ENGINE = DELEGATE_APE_ENGINE;\r\n  this.SUPPORT_HTML_EXTENSIONS = SUPPORT_HTML_EXTENSIONS;\r\n  this.DISABLE_FLASH_EXTENSIONS = DISABLE_FLASH_EXTENSIONS; // Since 5.0.0\r\n}\r\n\r\n/**\r\n * @class ApiVersion\r\n * Stores current api version.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @param major  The major version\r\n * @param minor  The minor version.\r\n * @param micro  The micro version.\r\n *\r\n * @return ApiVersion object.\r\n */\r\nfunction ApiVersion(major, minor, micro) {\r\n  this.major = major;\r\n  this.minor = minor;\r\n  this.micro = micro;\r\n}\r\n\r\n/**\r\n * @class MenuItemStatus\r\n * Stores flyout menu item status\r\n *\r\n * Since 5.2.0\r\n *\r\n * @param menuItemLabel  The menu item label.\r\n * @param enabled        True if user wants to enable the menu item.\r\n * @param checked        True if user wants to check the menu item.\r\n *\r\n * @return MenuItemStatus object.\r\n */\r\nfunction MenuItemStatus(menuItemLabel, enabled, checked) {\r\n  this.menuItemLabel = menuItemLabel;\r\n  this.enabled = enabled;\r\n  this.checked = checked;\r\n}\r\n\r\n/**\r\n * @class ContextMenuItemStatus\r\n * Stores the status of the context menu item.\r\n *\r\n * Since 5.2.0\r\n *\r\n * @param menuItemID     The menu item id.\r\n * @param enabled        True if user wants to enable the menu item.\r\n * @param checked        True if user wants to check the menu item.\r\n *\r\n * @return MenuItemStatus object.\r\n */\r\nfunction ContextMenuItemStatus(menuItemID, enabled, checked) {\r\n  this.menuItemID = menuItemID;\r\n  this.enabled = enabled;\r\n  this.checked = checked;\r\n}\r\n//------------------------------ CSInterface ----------------------------------\r\n\r\n/**\r\n * @class CSInterface\r\n * This is the entry point to the CEP extensibility infrastructure.\r\n * Instantiate this object and use it to:\r\n * <ul>\r\n * <li>Access information about the host application in which an extension is running</li>\r\n * <li>Launch an extension</li>\r\n * <li>Register interest in event notifications, and dispatch events</li>\r\n * </ul>\r\n *\r\n * @return A new \\c CSInterface object\r\n */\r\nfunction CSInterface() {}\r\n\r\n/**\r\n * User can add this event listener to handle native application theme color changes.\r\n * Callback function gives extensions ability to fine-tune their theme color after the\r\n * global theme color has been changed.\r\n * The callback function should be like below:\r\n *\r\n * @example\r\n * // event is a CSEvent object, but user can ignore it.\r\n * function OnAppThemeColorChanged(event)\r\n * {\r\n *    // Should get a latest HostEnvironment object from application.\r\n *    var skinInfo = JSON.parse(window.__adobe_cep__.getHostEnvironment()).appSkinInfo;\r\n *    // Gets the style information such as color info from the skinInfo,\r\n *    // and redraw all UI controls of your extension according to the style info.\r\n * }\r\n */\r\nCSInterface.THEME_COLOR_CHANGED_EVENT =\r\n  \"com.adobe.csxs.events.ThemeColorChanged\";\r\n\r\n/** The host environment data object. */\r\nCSInterface.prototype.hostEnvironment = window.__adobe_cep__\r\n  ? JSON.parse(window.__adobe_cep__.getHostEnvironment())\r\n  : null;\r\n\r\n/** Retrieves information about the host environment in which the\r\n *  extension is currently running.\r\n *\r\n *   @return A \\c #HostEnvironment object.\r\n */\r\nCSInterface.prototype.getHostEnvironment = function () {\r\n  this.hostEnvironment = JSON.parse(window.__adobe_cep__.getHostEnvironment());\r\n  return this.hostEnvironment;\r\n};\r\n\r\n/** Loads binary file created which is located at url asynchronously\r\n *\r\n *@param urlName url at which binary file is located. Local files should start with 'file://'\r\n *@param callback Optional. A callback function that returns after binary is loaded\r\n *@example\r\n * To create JS binary use command ./cep_compiler test.js test.bin\r\n * To load JS binary asyncronously\r\n *   var CSLib = new CSInterface();\r\n *   CSLib.loadBinAsync(url, function () { });\r\n */\r\nCSInterface.prototype.loadBinAsync = function (urlName, callback) {\r\n  try {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"arraybuffer\"; // make response as ArrayBuffer\r\n    xhr.open(\"GET\", urlName, true);\r\n    xhr.onerror = function () {\r\n      console.log(\"Unable to load snapshot from given URL\");\r\n      return false;\r\n    };\r\n    xhr.send();\r\n    xhr.onload = () => {\r\n      window.__adobe_cep__.loadSnapshot(xhr.response);\r\n      if (typeof callback === \"function\") {\r\n        callback();\r\n      } else if (typeof callback !== \"undefined\") {\r\n        console.log(\"Provided callback is not a function\");\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/** Loads binary file created synchronously\r\n *\r\n *@param pathName the local path at which binary file is located\r\n *@example\r\n * To create JS binary use command ./cep_compiler test.js test.bin\r\n * To load JS binary syncronously\r\n *   var CSLib = new CSInterface();\r\n *   CSLib.loadBinSync(path);\r\n */\r\nCSInterface.prototype.loadBinSync = function (pathName) {\r\n  try {\r\n    var OSVersion = this.getOSInformation();\r\n    if (pathName.startsWith(\"file://\")) {\r\n      if (OSVersion.indexOf(\"Windows\") >= 0) {\r\n        pathName = pathName.replace(\"file:///\", \"\");\r\n      } else if (OSVersion.indexOf(\"Mac\") >= 0) {\r\n        pathName = pathName.replace(\"file://\", \"\");\r\n      }\r\n      window.__adobe_cep__.loadSnapshot(pathName);\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n  //control should not come here\r\n  return false;\r\n};\r\n\r\n/** Closes this extension. */\r\nCSInterface.prototype.closeExtension = function () {\r\n  window.__adobe_cep__.closeExtension();\r\n};\r\n\r\n/**\r\n * Retrieves a path for which a constant is defined in the system.\r\n *\r\n * @param pathType The path-type constant defined in \\c #SystemPath ,\r\n *\r\n * @return The platform-specific system path string.\r\n */\r\nCSInterface.prototype.getSystemPath = function (pathType) {\r\n  var path = decodeURI(window.__adobe_cep__.getSystemPath(pathType));\r\n  var OSVersion = this.getOSInformation();\r\n  if (OSVersion.indexOf(\"Windows\") >= 0) {\r\n    path = path.replace(\"file:///\", \"\");\r\n  } else if (OSVersion.indexOf(\"Mac\") >= 0) {\r\n    path = path.replace(\"file://\", \"\");\r\n  }\r\n  return path;\r\n};\r\n\r\n/**\r\n * Evaluates a JavaScript script, which can use the JavaScript DOM\r\n * of the host application.\r\n *\r\n * @param script    The JavaScript script.\r\n * @param callback  Optional. A callback function that receives the result of execution.\r\n *          If execution fails, the callback function receives the error message \\c EvalScript_ErrMessage.\r\n */\r\nCSInterface.prototype.evalScript = function (script, callback) {\r\n  if (callback === null || callback === undefined) {\r\n    callback = function (result) {};\r\n  }\r\n  window.__adobe_cep__.evalScript(script, callback);\r\n};\r\n\r\n/**\r\n * Retrieves the unique identifier of the application.\r\n * in which the extension is currently running.\r\n *\r\n * @return The unique ID string.\r\n */\r\nCSInterface.prototype.getApplicationID = function () {\r\n  var appId = this.hostEnvironment.appId;\r\n  return appId;\r\n};\r\n\r\n/**\r\n * Retrieves host capability information for the application\r\n * in which the extension is currently running.\r\n *\r\n * @return A \\c #HostCapabilities object.\r\n */\r\nCSInterface.prototype.getHostCapabilities = function () {\r\n  var hostCapabilities = JSON.parse(window.__adobe_cep__.getHostCapabilities());\r\n  return hostCapabilities;\r\n};\r\n\r\n/**\r\n * Triggers a CEP event programmatically. Yoy can use it to dispatch\r\n * an event of a predefined type, or of a type you have defined.\r\n *\r\n * @param event A \\c CSEvent object.\r\n */\r\nCSInterface.prototype.dispatchEvent = function (event) {\r\n  if (typeof event.data == \"object\") {\r\n    event.data = JSON.stringify(event.data);\r\n  }\r\n\r\n  window.__adobe_cep__.dispatchEvent(event);\r\n};\r\n\r\n/**\r\n * Registers an interest in a CEP event of a particular type, and\r\n * assigns an event handler.\r\n * The event infrastructure notifies your extension when events of this type occur,\r\n * passing the event object to the registered handler function.\r\n *\r\n * @param type     The name of the event type of interest.\r\n * @param listener The JavaScript handler function or method.\r\n * @param obj      Optional, the object containing the handler method, if any.\r\n *         Default is null.\r\n */\r\nCSInterface.prototype.addEventListener = function (type, listener, obj) {\r\n  window.__adobe_cep__.addEventListener(type, listener, obj);\r\n};\r\n\r\n/**\r\n * Removes a registered event listener.\r\n *\r\n * @param type      The name of the event type of interest.\r\n * @param listener  The JavaScript handler function or method that was registered.\r\n * @param obj       Optional, the object containing the handler method, if any.\r\n *          Default is null.\r\n */\r\nCSInterface.prototype.removeEventListener = function (type, listener, obj) {\r\n  window.__adobe_cep__.removeEventListener(type, listener, obj);\r\n};\r\n\r\n/**\r\n * Loads and launches another extension, or activates the extension if it is already loaded.\r\n *\r\n * @param extensionId       The extension's unique identifier.\r\n * @param startupParams     Not currently used, pass \"\".\r\n *\r\n * @example\r\n * To launch the extension \"help\" with ID \"HLP\" from this extension, call:\r\n * <code>requestOpenExtension(\"HLP\", \"\"); </code>\r\n *\r\n */\r\nCSInterface.prototype.requestOpenExtension = function (extensionId, params) {\r\n  window.__adobe_cep__.requestOpenExtension(extensionId, params);\r\n};\r\n\r\n/**\r\n * Retrieves the list of extensions currently loaded in the current host application.\r\n * The extension list is initialized once, and remains the same during the lifetime\r\n * of the CEP session.\r\n *\r\n * @param extensionIds  Optional, an array of unique identifiers for extensions of interest.\r\n *          If omitted, retrieves data for all extensions.\r\n *\r\n * @return Zero or more \\c #Extension objects.\r\n */\r\nCSInterface.prototype.getExtensions = function (extensionIds) {\r\n  var extensionIdsStr = JSON.stringify(extensionIds);\r\n  var extensionsStr = window.__adobe_cep__.getExtensions(extensionIdsStr);\r\n\r\n  var extensions = JSON.parse(extensionsStr);\r\n  return extensions;\r\n};\r\n\r\n/**\r\n * Retrieves network-related preferences.\r\n *\r\n * @return A JavaScript object containing network preferences.\r\n */\r\nCSInterface.prototype.getNetworkPreferences = function () {\r\n  var result = window.__adobe_cep__.getNetworkPreferences();\r\n  var networkPre = JSON.parse(result);\r\n\r\n  return networkPre;\r\n};\r\n\r\n/**\r\n * Initializes the resource bundle for this extension with property values\r\n * for the current application and locale.\r\n * To support multiple locales, you must define a property file for each locale,\r\n * containing keyed display-string values for that locale.\r\n * See localization documentation for Extension Builder and related products.\r\n *\r\n * Keys can be in the\r\n * form <code>key.value=\"localized string\"</code>, for use in HTML text elements.\r\n * For example, in this input element, the localized \\c key.value string is displayed\r\n * instead of the empty \\c value string:\r\n *\r\n * <code><input type=\"submit\" value=\"\" data-locale=\"key\"/></code>\r\n *\r\n * @return An object containing the resource bundle information.\r\n */\r\nCSInterface.prototype.initResourceBundle = function () {\r\n  var resourceBundle = JSON.parse(window.__adobe_cep__.initResourceBundle());\r\n  var resElms = document.querySelectorAll(\"[data-locale]\");\r\n  for (var n = 0; n < resElms.length; n++) {\r\n    var resEl = resElms[n];\r\n    // Get the resource key from the element.\r\n    var resKey = resEl.getAttribute(\"data-locale\");\r\n    if (resKey) {\r\n      // Get all the resources that start with the key.\r\n      for (var key in resourceBundle) {\r\n        if (key.indexOf(resKey) === 0) {\r\n          var resValue = resourceBundle[key];\r\n          if (key.length == resKey.length) {\r\n            resEl.innerHTML = resValue;\r\n          } else if (\".\" == key.charAt(resKey.length)) {\r\n            var attrKey = key.substring(resKey.length + 1);\r\n            resEl[attrKey] = resValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return resourceBundle;\r\n};\r\n\r\n/**\r\n * Writes installation information to a file.\r\n *\r\n * @return The file path.\r\n */\r\nCSInterface.prototype.dumpInstallationInfo = function () {\r\n  return window.__adobe_cep__.dumpInstallationInfo();\r\n};\r\n\r\n/**\r\n * Retrieves version information for the current Operating System,\r\n * See http://www.useragentstring.com/pages/Chrome/ for Chrome \\c navigator.userAgent values.\r\n *\r\n * @return A string containing the OS version, or \"unknown Operation System\".\r\n * If user customizes the User Agent by setting CEF command parameter \"--user-agent\", only\r\n * \"Mac OS X\" or \"Windows\" will be returned.\r\n */\r\nCSInterface.prototype.getOSInformation = function () {\r\n  var userAgent = navigator.userAgent;\r\n\r\n  if (navigator.platform == \"Win32\" || navigator.platform == \"Windows\") {\r\n    var winVersion = \"Windows\";\r\n    var winBit = \"\";\r\n    if (userAgent.indexOf(\"Windows\") > -1) {\r\n      if (userAgent.indexOf(\"Windows NT 5.0\") > -1) {\r\n        winVersion = \"Windows 2000\";\r\n      } else if (userAgent.indexOf(\"Windows NT 5.1\") > -1) {\r\n        winVersion = \"Windows XP\";\r\n      } else if (userAgent.indexOf(\"Windows NT 5.2\") > -1) {\r\n        winVersion = \"Windows Server 2003\";\r\n      } else if (userAgent.indexOf(\"Windows NT 6.0\") > -1) {\r\n        winVersion = \"Windows Vista\";\r\n      } else if (userAgent.indexOf(\"Windows NT 6.1\") > -1) {\r\n        winVersion = \"Windows 7\";\r\n      } else if (userAgent.indexOf(\"Windows NT 6.2\") > -1) {\r\n        winVersion = \"Windows 8\";\r\n      } else if (userAgent.indexOf(\"Windows NT 6.3\") > -1) {\r\n        winVersion = \"Windows 8.1\";\r\n      } else if (userAgent.indexOf(\"Windows NT 10\") > -1) {\r\n        winVersion = \"Windows 10\";\r\n      }\r\n\r\n      if (userAgent.indexOf(\"WOW64\") > -1 || userAgent.indexOf(\"Win64\") > -1) {\r\n        winBit = \" 64-bit\";\r\n      } else {\r\n        winBit = \" 32-bit\";\r\n      }\r\n    }\r\n\r\n    return winVersion + winBit;\r\n  } else if (\r\n    navigator.platform == \"MacIntel\" ||\r\n    navigator.platform == \"Macintosh\"\r\n  ) {\r\n    var result = \"Mac OS X\";\r\n\r\n    if (userAgent.indexOf(\"Mac OS X\") > -1) {\r\n      result = userAgent.substring(\r\n        userAgent.indexOf(\"Mac OS X\"),\r\n        userAgent.indexOf(\")\")\r\n      );\r\n      result = result.replace(/_/g, \".\");\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  return \"Unknown Operation System\";\r\n};\r\n\r\n/**\r\n * Opens a page in the default system browser.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @param url  The URL of the page/file to open, or the email address.\r\n * Must use HTTP/HTTPS/file/mailto protocol. For example:\r\n *   \"http://www.adobe.com\"\r\n *   \"https://github.com\"\r\n *   \"file:///C:/log.txt\"\r\n *   \"mailto:test@adobe.com\"\r\n *\r\n * @return One of these error codes:\\n\r\n *      <ul>\\n\r\n *          <li>NO_ERROR - 0</li>\\n\r\n *          <li>ERR_UNKNOWN - 1</li>\\n\r\n *          <li>ERR_INVALID_PARAMS - 2</li>\\n\r\n *          <li>ERR_INVALID_URL - 201</li>\\n\r\n *      </ul>\\n\r\n */\r\nCSInterface.prototype.openURLInDefaultBrowser = function (url) {\r\n  return cep.util.openURLInDefaultBrowser(url);\r\n};\r\n\r\n/**\r\n * Retrieves extension ID.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @return extension ID.\r\n */\r\nCSInterface.prototype.getExtensionID = function () {\r\n  return window.__adobe_cep__.getExtensionId();\r\n};\r\n\r\n/**\r\n * Retrieves the scale factor of screen.\r\n * On Windows platform, the value of scale factor might be different from operating system's scale factor,\r\n * since host application may use its self-defined scale factor.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @return One of the following float number.\r\n *      <ul>\\n\r\n *          <li> -1.0 when error occurs </li>\\n\r\n *          <li> 1.0 means normal screen </li>\\n\r\n *          <li> >1.0 means HiDPI screen </li>\\n\r\n *      </ul>\\n\r\n */\r\nCSInterface.prototype.getScaleFactor = function () {\r\n  return window.__adobe_cep__.getScaleFactor();\r\n};\r\n\r\n/**\r\n * Retrieves the scale factor of Monitor.\r\n *\r\n * Since 8.5.0\r\n *\r\n * @return value >= 1.0f\r\n * only available for windows machine\r\n */\r\nif (navigator.appVersion.toLowerCase().indexOf(\"windows\") >= 0) {\r\n  CSInterface.prototype.getMonitorScaleFactor = function () {\r\n    return window.__adobe_cep__.getMonitorScaleFactor();\r\n  };\r\n}\r\n\r\n/**\r\n * Set a handler to detect any changes of scale factor. This only works on Mac.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @param handler   The function to be called when scale factor is changed.\r\n *\r\n */\r\nCSInterface.prototype.setScaleFactorChangedHandler = function (handler) {\r\n  window.__adobe_cep__.setScaleFactorChangedHandler(handler);\r\n};\r\n\r\n/**\r\n * Retrieves current API version.\r\n *\r\n * Since 4.2.0\r\n *\r\n * @return ApiVersion object.\r\n *\r\n */\r\nCSInterface.prototype.getCurrentApiVersion = function () {\r\n  var apiVersion = JSON.parse(window.__adobe_cep__.getCurrentApiVersion());\r\n  return apiVersion;\r\n};\r\n\r\n/**\r\n * Set panel flyout menu by an XML.\r\n *\r\n * Since 5.2.0\r\n *\r\n * Register a callback function for \"com.adobe.csxs.events.flyoutMenuClicked\" to get notified when a\r\n * menu item is clicked.\r\n * The \"data\" attribute of event is an object which contains \"menuId\" and \"menuName\" attributes.\r\n *\r\n * Register callback functions for \"com.adobe.csxs.events.flyoutMenuOpened\" and \"com.adobe.csxs.events.flyoutMenuClosed\"\r\n * respectively to get notified when flyout menu is opened or closed.\r\n *\r\n * @param menu     A XML string which describes menu structure.\r\n * An example menu XML:\r\n * <Menu>\r\n *   <MenuItem Id=\"menuItemId1\" Label=\"TestExample1\" Enabled=\"true\" Checked=\"false\"/>\r\n *   <MenuItem Label=\"TestExample2\">\r\n *     <MenuItem Label=\"TestExample2-1\" >\r\n *       <MenuItem Label=\"TestExample2-1-1\" Enabled=\"false\" Checked=\"true\"/>\r\n *     </MenuItem>\r\n *     <MenuItem Label=\"TestExample2-2\" Enabled=\"true\" Checked=\"true\"/>\r\n *   </MenuItem>\r\n *   <MenuItem Label=\"---\" />\r\n *   <MenuItem Label=\"TestExample3\" Enabled=\"false\" Checked=\"false\"/>\r\n * </Menu>\r\n *\r\n */\r\nCSInterface.prototype.setPanelFlyoutMenu = function (menu) {\r\n  if (\"string\" != typeof menu) {\r\n    return;\r\n  }\r\n\r\n  window.__adobe_cep__.invokeSync(\"setPanelFlyoutMenu\", menu);\r\n};\r\n\r\n/**\r\n * Updates a menu item in the extension window's flyout menu, by setting the enabled\r\n * and selection status.\r\n *\r\n * Since 5.2.0\r\n *\r\n * @param menuItemLabel The menu item label.\r\n * @param enabled       True to enable the item, false to disable it (gray it out).\r\n * @param checked       True to select the item, false to deselect it.\r\n *\r\n * @return false when the host application does not support this functionality (HostCapabilities.EXTENDED_PANEL_MENU is false).\r\n *         Fails silently if menu label is invalid.\r\n *\r\n * @see HostCapabilities.EXTENDED_PANEL_MENU\r\n */\r\nCSInterface.prototype.updatePanelMenuItem = function (\r\n  menuItemLabel,\r\n  enabled,\r\n  checked\r\n) {\r\n  var ret = false;\r\n  if (this.getHostCapabilities().EXTENDED_PANEL_MENU) {\r\n    var itemStatus = new MenuItemStatus(menuItemLabel, enabled, checked);\r\n    ret = window.__adobe_cep__.invokeSync(\r\n      \"updatePanelMenuItem\",\r\n      JSON.stringify(itemStatus)\r\n    );\r\n  }\r\n  return ret;\r\n};\r\n\r\n/**\r\n  * Set context menu by XML string.\r\n  *\r\n  * Since 5.2.0\r\n  *\r\n  * There are a number of conventions used to communicate what type of menu item to create and how it should be handled.\r\n  * - an item without menu ID or menu name is disabled and is not shown.\r\n  * - if the item name is \"---\" (three hyphens) then it is treated as a separator. The menu ID in this case will always be NULL.\r\n  * - Checkable attribute takes precedence over Checked attribute.\r\n  * - a PNG icon. For optimal display results please supply a 16 x 16px icon as larger dimensions will increase the size of the menu item.\r\n\t  The Chrome extension contextMenus API was taken as a reference.\r\n\t  https://developer.chrome.com/extensions/contextMenus\r\n  * - the items with icons and checkable items cannot coexist on the same menu level. The former take precedences over the latter.\r\n  *\r\n  * @param menu      A XML string which describes menu structure.\r\n  * @param callback  The callback function which is called when a menu item is clicked. The only parameter is the returned ID of clicked menu item.\r\n  *\r\n  * @description An example menu XML:\r\n  * <Menu>\r\n  *   <MenuItem Id=\"menuItemId1\" Label=\"TestExample1\" Enabled=\"true\" Checkable=\"true\" Checked=\"false\" Icon=\"./image/small_16X16.png\"/>\r\n  *   <MenuItem Id=\"menuItemId2\" Label=\"TestExample2\">\r\n  *     <MenuItem Id=\"menuItemId2-1\" Label=\"TestExample2-1\" >\r\n  *       <MenuItem Id=\"menuItemId2-1-1\" Label=\"TestExample2-1-1\" Enabled=\"false\" Checkable=\"true\" Checked=\"true\"/>\r\n  *     </MenuItem>\r\n  *     <MenuItem Id=\"menuItemId2-2\" Label=\"TestExample2-2\" Enabled=\"true\" Checkable=\"true\" Checked=\"true\"/>\r\n  *   </MenuItem>\r\n  *   <MenuItem Label=\"---\" />\r\n  *   <MenuItem Id=\"menuItemId3\" Label=\"TestExample3\" Enabled=\"false\" Checkable=\"true\" Checked=\"false\"/>\r\n  * </Menu>\r\n  */\r\nCSInterface.prototype.setContextMenu = function (menu, callback) {\r\n  if (\"string\" != typeof menu) {\r\n    return;\r\n  }\r\n\r\n  window.__adobe_cep__.invokeAsync(\"setContextMenu\", menu, callback);\r\n};\r\n\r\n/**\r\n  * Set context menu by JSON string.\r\n  *\r\n  * Since 6.0.0\r\n  *\r\n  * There are a number of conventions used to communicate what type of menu item to create and how it should be handled.\r\n  * - an item without menu ID or menu name is disabled and is not shown.\r\n  * - if the item label is \"---\" (three hyphens) then it is treated as a separator. The menu ID in this case will always be NULL.\r\n  * - Checkable attribute takes precedence over Checked attribute.\r\n  * - a PNG icon. For optimal display results please supply a 16 x 16px icon as larger dimensions will increase the size of the menu item.\r\n\t  The Chrome extension contextMenus API was taken as a reference.\r\n  * - the items with icons and checkable items cannot coexist on the same menu level. The former take precedences over the latter.\r\n\t  https://developer.chrome.com/extensions/contextMenus\r\n  *\r\n  * @param menu      A JSON string which describes menu structure.\r\n  * @param callback  The callback function which is called when a menu item is clicked. The only parameter is the returned ID of clicked menu item.\r\n  *\r\n  * @description An example menu JSON:\r\n  *\r\n  * {\r\n  *      \"menu\": [\r\n  *          {\r\n  *              \"id\": \"menuItemId1\",\r\n  *              \"label\": \"testExample1\",\r\n  *              \"enabled\": true,\r\n  *              \"checkable\": true,\r\n  *              \"checked\": false,\r\n  *              \"icon\": \"./image/small_16X16.png\"\r\n  *          },\r\n  *          {\r\n  *              \"id\": \"menuItemId2\",\r\n  *              \"label\": \"testExample2\",\r\n  *              \"menu\": [\r\n  *                  {\r\n  *                      \"id\": \"menuItemId2-1\",\r\n  *                      \"label\": \"testExample2-1\",\r\n  *                      \"menu\": [\r\n  *                          {\r\n  *                              \"id\": \"menuItemId2-1-1\",\r\n  *                              \"label\": \"testExample2-1-1\",\r\n  *                              \"enabled\": false,\r\n  *                              \"checkable\": true,\r\n  *                              \"checked\": true\r\n  *                          }\r\n  *                      ]\r\n  *                  },\r\n  *                  {\r\n  *                      \"id\": \"menuItemId2-2\",\r\n  *                      \"label\": \"testExample2-2\",\r\n  *                      \"enabled\": true,\r\n  *                      \"checkable\": true,\r\n  *                      \"checked\": true\r\n  *                  }\r\n  *              ]\r\n  *          },\r\n  *          {\r\n  *              \"label\": \"---\"\r\n  *          },\r\n  *          {\r\n  *              \"id\": \"menuItemId3\",\r\n  *              \"label\": \"testExample3\",\r\n  *              \"enabled\": false,\r\n  *              \"checkable\": true,\r\n  *              \"checked\": false\r\n  *          }\r\n  *      ]\r\n  *  }\r\n  *\r\n  */\r\nCSInterface.prototype.setContextMenuByJSON = function (menu, callback) {\r\n  if (\"string\" != typeof menu) {\r\n    return;\r\n  }\r\n\r\n  window.__adobe_cep__.invokeAsync(\"setContextMenuByJSON\", menu, callback);\r\n};\r\n\r\n/**\r\n * Updates a context menu item by setting the enabled and selection status.\r\n *\r\n * Since 5.2.0\r\n *\r\n * @param menuItemID    The menu item ID.\r\n * @param enabled       True to enable the item, false to disable it (gray it out).\r\n * @param checked       True to select the item, false to deselect it.\r\n */\r\nCSInterface.prototype.updateContextMenuItem = function (\r\n  menuItemID,\r\n  enabled,\r\n  checked\r\n) {\r\n  var itemStatus = new ContextMenuItemStatus(menuItemID, enabled, checked);\r\n  ret = window.__adobe_cep__.invokeSync(\r\n    \"updateContextMenuItem\",\r\n    JSON.stringify(itemStatus)\r\n  );\r\n};\r\n\r\n/**\r\n * Get the visibility status of an extension window.\r\n *\r\n * Since 6.0.0\r\n *\r\n * @return true if the extension window is visible; false if the extension window is hidden.\r\n */\r\nCSInterface.prototype.isWindowVisible = function () {\r\n  return window.__adobe_cep__.invokeSync(\"isWindowVisible\", \"\");\r\n};\r\n\r\n/**\r\n * Resize extension's content to the specified dimensions.\r\n * 1. Works with modal and modeless extensions in all Adobe products.\r\n * 2. Extension's manifest min/max size constraints apply and take precedence.\r\n * 3. For panel extensions\r\n *    3.1 This works in all Adobe products except:\r\n *        * Premiere Pro\r\n *        * Prelude\r\n *        * After Effects\r\n *    3.2 When the panel is in certain states (especially when being docked),\r\n *        it will not change to the desired dimensions even when the\r\n *        specified size satisfies min/max constraints.\r\n *\r\n * Since 6.0.0\r\n *\r\n * @param width  The new width\r\n * @param height The new height\r\n */\r\nCSInterface.prototype.resizeContent = function (width, height) {\r\n  window.__adobe_cep__.resizeContent(width, height);\r\n};\r\n\r\n/**\r\n * Register the invalid certificate callback for an extension.\r\n * This callback will be triggered when the extension tries to access the web site that contains the invalid certificate on the main frame.\r\n * But if the extension does not call this function and tries to access the web site containing the invalid certificate, a default error page will be shown.\r\n *\r\n * Since 6.1.0\r\n *\r\n * @param callback the callback function\r\n */\r\nCSInterface.prototype.registerInvalidCertificateCallback = function (callback) {\r\n  return window.__adobe_cep__.registerInvalidCertificateCallback(callback);\r\n};\r\n\r\n/**\r\n  * Register an interest in some key events to prevent them from being sent to the host application.\r\n  *\r\n  * This function works with modeless extensions and panel extensions.\r\n  * Generally all the key events will be sent to the host application for these two extensions if the current focused element\r\n  * is not text input or dropdown,\r\n  * If you want to intercept some key events and want them to be handled in the extension, please call this function\r\n  * in advance to prevent them being sent to the host application.\r\n  *\r\n  * Since 6.1.0\r\n  *\r\n  * @param keyEventsInterest      A JSON string describing those key events you are interested in. A null object or\r\n\t\t\t\t\t\t\t\t  an empty string will lead to removing the interest\r\n  *\r\n  * This JSON string should be an array, each object has following keys:\r\n  *\r\n  * keyCode:  [Required] represents an OS system dependent virtual key code identifying\r\n  *           the unmodified value of the pressed key.\r\n  * ctrlKey:  [optional] a Boolean that indicates if the control key was pressed (true) or not (false) when the event occurred.\r\n  * altKey:   [optional] a Boolean that indicates if the alt key was pressed (true) or not (false) when the event occurred.\r\n  * shiftKey: [optional] a Boolean that indicates if the shift key was pressed (true) or not (false) when the event occurred.\r\n  * metaKey:  [optional] (Mac Only) a Boolean that indicates if the Meta key was pressed (true) or not (false) when the event occurred.\r\n  *                      On Macintosh keyboards, this is the command key. To detect Windows key on Windows, please use keyCode instead.\r\n  * An example JSON string:\r\n  *\r\n  * [\r\n  *     {\r\n  *         \"keyCode\": 48\r\n  *     },\r\n  *     {\r\n  *         \"keyCode\": 123,\r\n  *         \"ctrlKey\": true\r\n  *     },\r\n  *     {\r\n  *         \"keyCode\": 123,\r\n  *         \"ctrlKey\": true,\r\n  *         \"metaKey\": true\r\n  *     }\r\n  * ]\r\n  *\r\n  */\r\nCSInterface.prototype.registerKeyEventsInterest = function (keyEventsInterest) {\r\n  return window.__adobe_cep__.registerKeyEventsInterest(keyEventsInterest);\r\n};\r\n\r\n/**\r\n * Set the title of the extension window.\r\n * This function works with modal and modeless extensions in all Adobe products, and panel extensions in Photoshop, InDesign, InCopy, Illustrator, Flash Pro and Dreamweaver.\r\n *\r\n * Since 6.1.0\r\n *\r\n * @param title The window title.\r\n */\r\nCSInterface.prototype.setWindowTitle = function (title) {\r\n  window.__adobe_cep__.invokeSync(\"setWindowTitle\", title);\r\n};\r\n\r\n/**\r\n * Get the title of the extension window.\r\n * This function works with modal and modeless extensions in all Adobe products, and panel extensions in Photoshop, InDesign, InCopy, Illustrator, Flash Pro and Dreamweaver.\r\n *\r\n * Since 6.1.0\r\n *\r\n * @return The window title.\r\n */\r\nCSInterface.prototype.getWindowTitle = function () {\r\n  return window.__adobe_cep__.invokeSync(\"getWindowTitle\", \"\");\r\n};\r\n\r\n// Boilerplate Added Export\r\nexport default CSInterface;\r\nexport {\r\n  CSXSWindowType,\r\n  Version,\r\n  VersionBound,\r\n  VersionRange,\r\n  Runtime,\r\n  Extension,\r\n  CSEvent,\r\n  SystemPath,\r\n  ColorType,\r\n  RGBColor,\r\n  Direction,\r\n  GradientStop,\r\n  GradientColor,\r\n  UIColor,\r\n  AppSkinInfo,\r\n  HostEnvironment,\r\n  HostCapabilities,\r\n  ApiVersion,\r\n  MenuItemStatus,\r\n  ContextMenuItemStatus,\r\n  CSInterface,\r\n};\r\n","/**************************************************************************************************\r\n *\r\n * ADOBE SYSTEMS INCORPORATED\r\n * Copyright 2020 Adobe Systems Incorporated\r\n * All Rights Reserved.\r\n *\r\n * NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the\r\n * terms of the Adobe license agreement accompanying it.  If you have received this file from a\r\n * source other than Adobe, then your use, modification, or distribution of it requires the prior\r\n * written permission of Adobe.\r\n *\r\n **************************************************************************************************/\r\n\r\n/** Vulcan - v11.2.0 */\r\n\r\n/**\r\n * @class Vulcan\r\n *\r\n * The singleton instance, <tt>VulcanInterface</tt>, provides an interface\r\n * to the Vulcan. Allows you to launch CC applications\r\n * and discover information about them.\r\n */\r\nfunction Vulcan() {}\r\n\r\n/**\r\n * Gets all available application SAPCode-Specifiers on the local machine.\r\n *\r\n * Vulcan Control New 6.x APIs, and Deprecating older Vulcan Control APIs.\r\n * Changes : New getTargetSpecifiersEx returns productSAPCodeSpecifiers\r\n *\r\n * @return The array of all available application SAPCode-Specifiers.\r\n */\r\nVulcan.prototype.getTargetSpecifiersEx = function () {\r\n  var params = {};\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanGetTargetSpecifiersEx\",\r\n      JSON.stringify(params)\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * Launches a CC application on the local machine, if it is not already running.\r\n *\r\n * Vulcan Control New 6.x APIs, and Deprecating older Vulcan Control APIs.\r\n * Changes : New launchAppEx uses productSAPCodeSpecifiers\r\n *\r\n * @param productSAPCodeSpecifier The application specifier; for example \"ILST-25.2.3\", \"ILST-25\", \"ILST-25.2.3-en_US\" and \"ILST. Refer to `Documentation/CEP 11.1 HTML Extension Cookbook.md#applications-integrated-with-cep` for product SAPCode.\r\n * @param focus           True to launch in foreground, or false to launch in the background.\r\n * @param cmdLine         Optional, command-line parameters to supply to the launch command.\r\n * @return True if the app can be launched, false otherwise.\r\n */\r\nVulcan.prototype.launchAppEx = function (\r\n  productSAPCodeSpecifier,\r\n  focus,\r\n  cmdLine\r\n) {\r\n  if (!requiredParamsValid(productSAPCodeSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.productSAPCodeSpecifier = productSAPCodeSpecifier;\r\n  params.focus = focus ? \"true\" : \"false\";\r\n  params.cmdLine = requiredParamsValid(cmdLine) ? cmdLine : \"\";\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\"vulcanLaunchAppEx\", JSON.stringify(params))\r\n  ).result;\r\n};\r\n\r\n/**\r\n * Checks whether a CC application is running on the local machine.\r\n *\r\n * Vulcan Control New 6.x APIs, and Deprecating older Vulcan Control APIs.\r\n * Changes : New isAppRunningEx uses productSAPCodeSpecifiers\r\n *\r\n * @param productSAPCodeSpecifier The application specifier; for example \"ILST-25.2.3\", \"ILST-25\", \"ILST-25.2.3-en_US\" and \"ILST. Refer to `Documentation/CEP 11.1 HTML Extension Cookbook.md#applications-integrated-with-cep` for product SAPCode.\r\n * @return True if the app is running, false otherwise.\r\n */\r\nVulcan.prototype.isAppRunningEx = function (productSAPCodeSpecifier) {\r\n  if (!requiredParamsValid(productSAPCodeSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.productSAPCodeSpecifier = productSAPCodeSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanIsAppRunningEx\",\r\n      JSON.stringify(params)\r\n    )\r\n  ).result;\r\n};\r\n\r\n/**\r\n * Checks whether a CC application is installed on the local machine.\r\n *\r\n * Vulcan Control New 6.x APIs, and Deprecating older Vulcan Control APIs.\r\n * Changes : New isAppInstalledEx uses productSAPCodeSpecifiers\r\n *\r\n * @param productSAPCodeSpecifier The application specifier; for example \"ILST-25.2.3\", \"ILST-25\", \"ILST-25.2.3-en_US\" and \"ILST. Refer to `Documentation/CEP 11.1 HTML Extension Cookbook.md#applications-integrated-with-cep` for product SAPCode.\r\n * @return True if the app is installed, false otherwise.\r\n */\r\nVulcan.prototype.isAppInstalledEx = function (productSAPCodeSpecifier) {\r\n  if (!requiredParamsValid(productSAPCodeSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.productSAPCodeSpecifier = productSAPCodeSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanIsAppInstalledEx\",\r\n      JSON.stringify(params)\r\n    )\r\n  ).result;\r\n};\r\n\r\n/**s\r\n * Retrieves the local install path of a CC application.\r\n *\r\n * Vulcan Control New 6.x APIs, and Deprecating older Vulcan Control APIs.\r\n * Changes : New getAppPathEx uses productSAPCodeSpecifiers\r\n *\r\n * @param productSAPCodeSpecifier The application specifier; for example \"ILST-25.2.3\", \"ILST-25\", \"ILST-25.2.3-en_US\" and \"ILST. Refer to `Documentation/CEP 11.1 HTML Extension Cookbook.md#applications-integrated-with-cep` for product SAPCode.\r\n * @return The path string if the application is found, \"\" otherwise.\r\n */\r\nVulcan.prototype.getAppPathEx = function (productSAPCodeSpecifier) {\r\n  if (!requiredParamsValid(productSAPCodeSpecifier)) {\r\n    return \"\";\r\n  }\r\n\r\n  var params = {};\r\n  params.productSAPCodeSpecifier = productSAPCodeSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanGetAppPathEx\",\r\n      JSON.stringify(params)\r\n    )\r\n  ).result;\r\n};\r\n\r\n/**\r\n * DEPRECATED API:: use getTargetSpecifiersEx\r\n * Gets all available application specifiers on the local machine.\r\n *\r\n * @return The array of all available application specifiers.\r\n */\r\nVulcan.prototype.getTargetSpecifiers = function () {\r\n  console.warn(\r\n    \"WARNING! Function 'getTargetSpecifiers' has been deprecated, please use the new 'getTargetSpecifiersEx' function instead!\"\r\n  );\r\n  var params = {};\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanGetTargetSpecifiers\",\r\n      JSON.stringify(params)\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * DEPRECATED API:: use launchAppEx\r\n * Launches a CC application on the local machine, if it is not already running.\r\n *\r\n * @param targetSpecifier The application specifier; for example \"indesign\".\r\n *\r\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\r\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\r\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\r\n *        receive wrong result.\r\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\r\n *\r\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\r\n * @param focus           True to launch in foreground, or false to launch in the background.\r\n * @param cmdLine         Optional, command-line parameters to supply to the launch command.\r\n * @return True if the app can be launched, false otherwise.\r\n */\r\nVulcan.prototype.launchApp = function (targetSpecifier, focus, cmdLine) {\r\n  console.warn(\r\n    \"WARNING! Function 'launchApp' has been deprecated, please use the new 'launchAppEx' function instead!\"\r\n  );\r\n  if (!requiredParamsValid(targetSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.targetSpecifier = targetSpecifier;\r\n  params.focus = focus ? \"true\" : \"false\";\r\n  params.cmdLine = requiredParamsValid(cmdLine) ? cmdLine : \"\";\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\"vulcanLaunchApp\", JSON.stringify(params))\r\n  ).result;\r\n};\r\n\r\n/**\r\n * DEPRECATED API:: use isAppRunningEx\r\n * Checks whether a CC application is running on the local machine.\r\n *\r\n * @param targetSpecifier The application specifier; for example \"indesign\".\r\n *\r\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\r\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\r\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\r\n *        receive wrong result.\r\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\r\n *\r\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\r\n * @return True if the app is running, false otherwise.\r\n */\r\nVulcan.prototype.isAppRunning = function (targetSpecifier) {\r\n  console.warn(\r\n    \"WARNING! Function 'isAppRunning' has been deprecated, please use the new 'isAppRunningEx' function instead!\"\r\n  );\r\n  if (!requiredParamsValid(targetSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.targetSpecifier = targetSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanIsAppRunning\",\r\n      JSON.stringify(params)\r\n    )\r\n  ).result;\r\n};\r\n\r\n/**\r\n * DEPRECATED API:: use isAppInstalledEx\r\n * Checks whether a CC application is installed on the local machine.\r\n *\r\n * @param targetSpecifier The application specifier; for example \"indesign\".\r\n *\r\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\r\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\r\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\r\n *        receive wrong result.\r\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\r\n *\r\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\r\n * @return True if the app is installed, false otherwise.\r\n */\r\nVulcan.prototype.isAppInstalled = function (targetSpecifier) {\r\n  console.warn(\r\n    \"WARNING! Function 'isAppInstalled' has been deprecated, please use the new 'isAppInstalledEx' function instead!\"\r\n  );\r\n  if (!requiredParamsValid(targetSpecifier)) {\r\n    return false;\r\n  }\r\n\r\n  var params = {};\r\n  params.targetSpecifier = targetSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanIsAppInstalled\",\r\n      JSON.stringify(params)\r\n    )\r\n  ).result;\r\n};\r\n\r\n/**\r\n * DEPRECATED API:: use getAppPathEx\r\n * Retrieves the local install path of a CC application.\r\n *\r\n * @param targetSpecifier The application specifier; for example \"indesign\".\r\n *\r\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\r\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\r\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\r\n *        receive wrong result.\r\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\r\n *\r\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\r\n * @return The path string if the application is found, \"\" otherwise.\r\n */\r\nVulcan.prototype.getAppPath = function (targetSpecifier) {\r\n  console.warn(\r\n    \"WARNING! Function 'getAppPath' has been deprecated, please use the new 'getAppPathEx' function instead!\"\r\n  );\r\n  if (!requiredParamsValid(targetSpecifier)) {\r\n    return \"\";\r\n  }\r\n\r\n  var params = {};\r\n  params.targetSpecifier = targetSpecifier;\r\n\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\"vulcanGetAppPath\", JSON.stringify(params))\r\n  ).result;\r\n};\r\n\r\n/**\r\n * Registers a message listener callback function for a Vulcan message.\r\n *\r\n * @param type            The message type.\r\n * @param callback        The callback function that handles the message.\r\n *                        Takes one argument, the message object.\r\n * @param obj             Optional, the object containing the callback method, if any.\r\n *                        Default is null.\r\n */\r\nVulcan.prototype.addMessageListener = function (type, callback, obj) {\r\n  if (\r\n    !requiredParamsValid(type, callback) ||\r\n    !strStartsWith(type, VulcanMessage.TYPE_PREFIX)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var params = {};\r\n  params.type = type;\r\n\r\n  window.__adobe_cep__.invokeAsync(\r\n    \"vulcanAddMessageListener\",\r\n    JSON.stringify(params),\r\n    callback,\r\n    obj\r\n  );\r\n};\r\n\r\n/**\r\n * Removes a registered message listener callback function for a Vulcan message.\r\n *\r\n * @param type            The message type.\r\n * @param callback        The callback function that was registered.\r\n *                        Takes one argument, the message object.\r\n * @param obj             Optional, the object containing the callback method, if any.\r\n *                        Default is null.\r\n */\r\nVulcan.prototype.removeMessageListener = function (type, callback, obj) {\r\n  if (\r\n    !requiredParamsValid(type, callback) ||\r\n    !strStartsWith(type, VulcanMessage.TYPE_PREFIX)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var params = {};\r\n  params.type = type;\r\n\r\n  window.__adobe_cep__.invokeAsync(\r\n    \"vulcanRemoveMessageListener\",\r\n    JSON.stringify(params),\r\n    callback,\r\n    obj\r\n  );\r\n};\r\n\r\n/**\r\n * Dispatches a Vulcan message.\r\n *\r\n * @param vulcanMessage   The message object.\r\n */\r\nVulcan.prototype.dispatchMessage = function (vulcanMessage) {\r\n  if (\r\n    !requiredParamsValid(vulcanMessage) ||\r\n    !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var params = {};\r\n  var message = new VulcanMessage(vulcanMessage.type);\r\n  message.initialize(vulcanMessage);\r\n  params.vulcanMessage = message;\r\n\r\n  window.__adobe_cep__.invokeSync(\r\n    \"vulcanDispatchMessage\",\r\n    JSON.stringify(params)\r\n  );\r\n};\r\n\r\n/**\r\n * Retrieves the message payload of a Vulcan message for the registered message listener callback function.\r\n *\r\n * @param vulcanMessage   The message object.\r\n * @return                A string containing the message payload.\r\n */\r\nVulcan.prototype.getPayload = function (vulcanMessage) {\r\n  if (\r\n    !requiredParamsValid(vulcanMessage) ||\r\n    !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX)\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  var message = new VulcanMessage(vulcanMessage.type);\r\n  message.initialize(vulcanMessage);\r\n  return message.getPayload();\r\n};\r\n\r\n/**\r\n * Gets all available endpoints of the running Vulcan-enabled applications.\r\n *\r\n * Since 7.0.0\r\n *\r\n * @return                The array of all available endpoints.\r\n * An example endpoint string:\r\n * <endPoint>\r\n *   <appId>PHXS</appId>\r\n *   <appVersion>16.1.0</appVersion>\r\n * </endPoint>\r\n */\r\nVulcan.prototype.getEndPoints = function () {\r\n  var params = {};\r\n  return JSON.parse(\r\n    window.__adobe_cep__.invokeSync(\r\n      \"vulcanGetEndPoints\",\r\n      JSON.stringify(params)\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * Gets the endpoint for itself.\r\n *\r\n * Since 7.0.0\r\n *\r\n * @return                The endpoint string for itself.\r\n */\r\nVulcan.prototype.getSelfEndPoint = function () {\r\n  var params = {};\r\n  return window.__adobe_cep__.invokeSync(\r\n    \"vulcanGetSelfEndPoint\",\r\n    JSON.stringify(params)\r\n  );\r\n};\r\n\r\n/** Singleton instance of Vulcan **/\r\nvar VulcanInterface = new Vulcan();\r\n\r\n//--------------------------------- Vulcan Message ------------------------------\r\n\r\n/**\r\n * @class VulcanMessage\r\n * Message type for sending messages between host applications.\r\n * A message of this type can be sent to the designated destination\r\n * when appId and appVersion are provided and valid. Otherwise,\r\n * the message is broadcast to all running Vulcan-enabled applications.\r\n *\r\n * To send a message between extensions running within one\r\n * application, use the <code>CSEvent</code> type in CSInterface.js.\r\n *\r\n * @param type            The message type.\r\n * @param appId           The peer appId.\r\n * @param appVersion      The peer appVersion.\r\n *\r\n */\r\nfunction VulcanMessage(type, appId, appVersion) {\r\n  this.type = type;\r\n  this.scope = VulcanMessage.SCOPE_SUITE;\r\n  this.appId = requiredParamsValid(appId)\r\n    ? appId\r\n    : VulcanMessage.DEFAULT_APP_ID;\r\n  this.appVersion = requiredParamsValid(appVersion)\r\n    ? appVersion\r\n    : VulcanMessage.DEFAULT_APP_VERSION;\r\n  this.data = VulcanMessage.DEFAULT_DATA;\r\n}\r\n\r\nVulcanMessage.TYPE_PREFIX = \"vulcan.SuiteMessage.\";\r\nVulcanMessage.SCOPE_SUITE = \"GLOBAL\";\r\nVulcanMessage.DEFAULT_APP_ID = \"UNKNOWN\";\r\nVulcanMessage.DEFAULT_APP_VERSION = \"UNKNOWN\";\r\nVulcanMessage.DEFAULT_DATA = \"<data><payload></payload></data>\";\r\nVulcanMessage.dataTemplate = \"<data>{0}</data>\";\r\nVulcanMessage.payloadTemplate = \"<payload>{0}</payload>\";\r\n\r\n/**\r\n * Initializes this message instance.\r\n *\r\n * @param message         A \\c message instance to use for initialization.\r\n */\r\nVulcanMessage.prototype.initialize = function (message) {\r\n  this.type = message.type;\r\n  this.scope = message.scope;\r\n  this.appId = message.appId;\r\n  this.appVersion = message.appVersion;\r\n  this.data = message.data;\r\n};\r\n\r\n/**\r\n * Retrieves the message data.\r\n *\r\n * @return A data string in XML format.\r\n */\r\nVulcanMessage.prototype.xmlData = function () {\r\n  if (this.data === undefined) {\r\n    var str = \"\";\r\n    str = String.format(VulcanMessage.payloadTemplate, str);\r\n    this.data = String.format(VulcanMessage.dataTemplate, str);\r\n  }\r\n  return this.data;\r\n};\r\n\r\n/**\r\n * Sets the message payload of this message.\r\n *\r\n * @param payload         A string containing the message payload.\r\n */\r\nVulcanMessage.prototype.setPayload = function (payload) {\r\n  var str = cep.encoding.convertion.utf8_to_b64(payload);\r\n  str = String.format(VulcanMessage.payloadTemplate, str);\r\n  this.data = String.format(VulcanMessage.dataTemplate, str);\r\n};\r\n\r\n/**\r\n * Retrieves the message payload of this message.\r\n *\r\n * @return                A string containing the message payload.\r\n */\r\nVulcanMessage.prototype.getPayload = function () {\r\n  var str = GetValueByKey(this.data, \"payload\");\r\n  if (str !== null) {\r\n    return cep.encoding.convertion.b64_to_utf8(str);\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Converts the properties of this instance to a string.\r\n *\r\n * @return The string version of this instance.\r\n */\r\nVulcanMessage.prototype.toString = function () {\r\n  var str = \"type=\" + this.type;\r\n  str += \", scope=\" + this.scope;\r\n  str += \", appId=\" + this.appId;\r\n  str += \", appVersion=\" + this.appVersion;\r\n  str += \", data=\" + this.xmlData();\r\n  return str;\r\n};\r\n\r\n//--------------------------------------- Util --------------------------------\r\n\r\n/**\r\n * Formats a string based on a template.\r\n *\r\n * @param src The format template.\r\n *\r\n * @return The formatted string\r\n */\r\nString.format = function (src) {\r\n  if (arguments.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  var args = Array.prototype.slice.call(arguments, 1);\r\n  return src.replace(/\\{(\\d+)\\}/g, function (m, i) {\r\n    return args[i];\r\n  });\r\n};\r\n\r\n/**\r\n * Retrieves the content of an XML element.\r\n *\r\n * @param xmlStr    The XML string.\r\n * @param key       The name of the tag.\r\n *\r\n * @return          The content of the tag, or the empty string\r\n *                  if such tag is not found or the tag has no content.\r\n */\r\nfunction GetValueByKey(xmlStr, key) {\r\n  if (window.DOMParser) {\r\n    var parser = new window.DOMParser();\r\n    try {\r\n      var xmlDoc = parser.parseFromString(xmlStr, \"text/xml\");\r\n      var node = xmlDoc.getElementsByTagName(key)[0];\r\n      if (node && node.childNodes[0]) {\r\n        return node.childNodes[0].nodeValue;\r\n      }\r\n    } catch (e) {\r\n      //log the error\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * Reports whether required parameters are valid.\r\n *\r\n * @return    True if all required parameters are valid,\r\n *            false if any of the required parameters are invalid.\r\n */\r\nfunction requiredParamsValid() {\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var argument = arguments[i];\r\n    if (argument === undefined || argument === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Reports whether a string has a given prefix.\r\n *\r\n * @param str       The target string.\r\n * @param prefix    The specific prefix string.\r\n *\r\n * @return          True if the string has the prefix, false if not.\r\n */\r\nfunction strStartsWith(str, prefix) {\r\n  if (typeof str != \"string\") {\r\n    return false;\r\n  }\r\n  return str.indexOf(prefix) === 0;\r\n}\r\n\r\n// Boilerplate Added Export\r\nexport { VulcanMessage };\r\nexport default Vulcan;\r\n","import { CEP_Config } from \"vite-cep-plugin\";\r\nimport { version } from \"./package.json\";\r\n\r\nconst config: CEP_Config = {\r\n  version,\r\n  id: \"com.AudioImporterV2.cep\",\r\n  displayName: \"Audio Importer V2\",\r\n  symlink: \"local\",\r\n  port: 3000,\r\n  servePort: 5000,\r\n  startingDebugPort: 8850,\r\n  extensionManifestVersion: 6.0,\r\n  requiredRuntimeVersion: 9.0,\r\n  hosts: [\r\n    { name: \"PPRO\", version: \"[0.0,99.9]\" }\r\n  ],\r\n  type: \"Panel\",\r\n  iconDarkNormal: \"./src/assets/light-icon.png\",\r\n  iconNormal: \"./src/assets/dark-icon.png\",\r\n  iconDarkNormalRollOver: \"./src/assets/light-icon.png\",\r\n  iconNormalRollOver: \"./src/assets/dark-icon.png\",\r\n  parameters: [\"--v=0\", \"--enable-nodejs\", \"--mixed-context\"],\r\n  width: 500,\r\n  height: 550,\r\n\r\n  panels: [\r\n    {\r\n      mainPath: \"./main/index.html\",\r\n      name: \"main\",\r\n      panelDisplayName: \"Audio Importer V2\",\r\n      autoVisible: true,\r\n      width: 690,\r\n      height: 650,\r\n    },\r\n    {\r\n      mainPath: \"./settings/index.html\", \r\n      name: \"settings\", \r\n      autoVisible: false, \r\n      type: \"Custom\", \r\n      startOnEvents: [\"com.adobe.csxs.events.ApplicationInitialized\", \"applicationActive\"], \r\n      height: 1, \r\n    }\r\n  ],\r\n  build: {\r\n    jsxBin: \"off\",\r\n    sourceMap: true,\r\n  },\r\n  zxp: {\r\n    country: \"US\",\r\n    province: \"CA\",\r\n    org: \"MyCompany\",\r\n    password: \"mypassword\",\r\n    tsa: \"http://timestamp.digicert.com/\",\r\n    sourceMap: false,\r\n    jsxBin: \"off\",\r\n  },\r\n  installModules: [],\r\n  copyAssets: [\r\n    \"./target/release/audio_importer.exe\",\r\n    \"./js\",\r\n    \"./jsx\",\r\n  ],\r\n\r\n\r\n  copyZipAssets: [],\r\n};\r\n\r\nexport default config;","import config from \"../../cep.config\";\r\nexport const ns = config.id;\r\n","// Abstracted built-in Node.js Modules\r\n\r\n//@ts-ignore\r\nexport const crypto = (\r\n  typeof window.cep !== \"undefined\" ? require(\"crypto\") : {}\r\n) as typeof import(\"crypto\");\r\nexport const assert = (\r\n  typeof window.cep !== \"undefined\" ? require(\"assert\") : {}\r\n) as typeof import(\"assert\");\r\nexport const buffer = (\r\n  typeof window.cep !== \"undefined\" ? require(\"buffer\") : {}\r\n) as typeof import(\"buffer\");\r\nexport const child_process = (\r\n  typeof window.cep !== \"undefined\" ? require(\"child_process\") : {}\r\n) as typeof import(\"child_process\");\r\nexport const cluster = (\r\n  typeof window.cep !== \"undefined\" ? require(\"cluster\") : {}\r\n) as typeof import(\"cluster\");\r\nexport const dgram = (\r\n  typeof window.cep !== \"undefined\" ? require(\"dgram\") : {}\r\n) as typeof import(\"dgram\");\r\nexport const dns = (\r\n  typeof window.cep !== \"undefined\" ? require(\"dns\") : {}\r\n) as typeof import(\"dns\");\r\nexport const domain = (\r\n  typeof window.cep !== \"undefined\" ? require(\"domain\") : {}\r\n) as typeof import(\"domain\");\r\nexport const events = (\r\n  typeof window.cep !== \"undefined\" ? require(\"events\") : {}\r\n) as typeof import(\"events\");\r\nexport const fs = (\r\n  typeof window.cep !== \"undefined\" ? require(\"fs\") : {}\r\n) as typeof import(\"fs\");\r\nexport const http = (\r\n  typeof window.cep !== \"undefined\" ? require(\"http\") : {}\r\n) as typeof import(\"http\");\r\nexport const https = (\r\n  typeof window.cep !== \"undefined\" ? require(\"https\") : {}\r\n) as typeof import(\"https\");\r\nexport const net = (\r\n  typeof window.cep !== \"undefined\" ? require(\"net\") : {}\r\n) as typeof import(\"net\");\r\nexport const os = (\r\n  typeof window.cep !== \"undefined\" ? require(\"os\") : {}\r\n) as typeof import(\"os\");\r\nexport const path = (\r\n  typeof window.cep !== \"undefined\" ? require(\"path\") : {}\r\n) as typeof import(\"path\");\r\nexport const punycode = (\r\n  typeof window.cep !== \"undefined\" ? require(\"punycode\") : {}\r\n) as typeof import(\"punycode\");\r\nexport const querystring = (\r\n  typeof window.cep !== \"undefined\" ? require(\"querystring\") : {}\r\n) as typeof import(\"querystring\");\r\nexport const readline = (\r\n  typeof window.cep !== \"undefined\" ? require(\"readline\") : {}\r\n) as typeof import(\"readline\");\r\nexport const stream = (\r\n  typeof window.cep !== \"undefined\" ? require(\"stream\") : {}\r\n) as typeof import(\"stream\");\r\nexport const string_decoder = (\r\n  typeof window.cep !== \"undefined\" ? require(\"string_decoder\") : {}\r\n) as typeof import(\"string_decoder\");\r\nexport const timers = (\r\n  typeof window.cep !== \"undefined\" ? require(\"timers\") : {}\r\n) as typeof import(\"timers\");\r\nexport const tls = (\r\n  typeof window.cep !== \"undefined\" ? require(\"tls\") : {}\r\n) as typeof import(\"tls\");\r\nexport const tty = (\r\n  typeof window.cep !== \"undefined\" ? require(\"tty\") : {}\r\n) as typeof import(\"tty\");\r\nexport const url = (\r\n  typeof window.cep !== \"undefined\" ? require(\"url\") : {}\r\n) as typeof import(\"url\");\r\nexport const util = (\r\n  typeof window.cep !== \"undefined\" ? require(\"util\") : {}\r\n) as typeof import(\"util\");\r\nexport const v8 = (\r\n  typeof window.cep !== \"undefined\" ? require(\"v8\") : {}\r\n) as typeof import(\"v8\");\r\nexport const vm = (\r\n  typeof window.cep !== \"undefined\" ? require(\"vm\") : {}\r\n) as typeof import(\"vm\");\r\nexport const zlib = (\r\n  typeof window.cep !== \"undefined\" ? require(\"zlib\") : {}\r\n) as typeof import(\"zlib\");\r\n","import CSInterface, { CSEvent } from \"../cep/csinterface\";\r\nimport Vulcan, { VulcanMessage } from \"../cep/vulcan\";\r\nimport { ns } from \"../../../shared/shared\";\r\nimport { fs } from \"../cep/node\";\r\n\r\nexport const csi = new CSInterface();\r\nexport const vulcan = new Vulcan();\r\n\r\n// jsx utils\r\n\r\n/**\r\n * @function EvalES\r\n * Evaluates a string in ExtendScript scoped to the project's namespace\r\n * Optionally, pass true to the isGlobal param to avoid scoping\r\n *\r\n * @param script    The script as a string to be evaluated\r\n * @param isGlobal  Optional. Defaults to false,\r\n *\r\n * @return String Result.\r\n */\r\n\r\nexport const evalES = (script: string, isGlobal = false): Promise<string> => {\r\n  return new Promise(function (resolve, reject) {\r\n    const pre = isGlobal\r\n      ? \"\"\r\n      : `var host = typeof $ !== 'undefined' ? $ : window; host[\"${ns}\"].`;\r\n    const fullString = pre + script;\r\n    csi.evalScript(\r\n      \"try{\" + fullString + \"}catch(e){alert(e);}\",\r\n      (res: string) => {\r\n        resolve(res);\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nimport type { Scripts } from \"@esTypes/index\";\r\nimport type { EventTS } from \"../../../shared/universals\";\r\n\r\ntype ArgTypes<F extends Function> = F extends (...args: infer A) => any\r\n  ? A\r\n  : never;\r\ntype ReturnType<F extends Function> = F extends (...args: infer A) => infer B\r\n  ? B\r\n  : never;\r\n\r\n/**\r\n * @description End-to-end type-safe ExtendScript evaluation with error handling\r\n * Call ExtendScript functions from CEP with type-safe parameters and return types.\r\n * Any ExtendScript errors are captured and logged to the CEP console for tracing\r\n *\r\n * @param functionName The name of the function to be evaluated.\r\n * @param args the list of arguments taken by the function.\r\n *\r\n * @return Promise resolving to function native return type.\r\n *\r\n * @example\r\n * // CEP\r\n * evalTS(\"myFunc\", 60, 'test').then((res) => {\r\n *    console.log(res.word);\r\n * });\r\n *\r\n * // ExtendScript\r\n * export const myFunc = (num: number, word: string) => {\r\n *    return { num, word };\r\n * }\r\n *\r\n */\r\n\r\nexport const evalTS = <\r\n  Key extends string & keyof Scripts,\r\n  Func extends Function & Scripts[Key]\r\n>(\r\n  functionName: Key,\r\n  ...args: ArgTypes<Func>\r\n): Promise<ReturnType<Func>> => {\r\n  return new Promise(function (resolve, reject) {\r\n    const formattedArgs = args\r\n      .map((arg) => {\r\n        console.log(JSON.stringify(arg));\r\n        return `${JSON.stringify(arg)}`;\r\n      })\r\n      .join(\",\");\r\n    csi.evalScript(\r\n      `try{\r\n          var host = typeof $ !== 'undefined' ? $ : window;\r\n          var res = host[\"${ns}\"].${functionName}(${formattedArgs});\r\n          JSON.stringify(res);\r\n        }catch(e){\r\n          e.fileName = new File(e.fileName).fsName;\r\n          JSON.stringify(e);\r\n        }`,\r\n      (res: string) => {\r\n        try {\r\n          //@ts-ignore\r\n          if (res === \"undefined\") return resolve();\r\n          const parsed = JSON.parse(res);\r\n          if (parsed.name === \"ReferenceError\") {\r\n            console.error(\"REFERENCE ERROR\");\r\n            reject(parsed);\r\n          } else {\r\n            resolve(parsed);\r\n          }\r\n        } catch (error) {\r\n          reject(res);\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nexport const evalFile = (file: string) => {\r\n  return evalES(\r\n    \"typeof $ !== 'undefined' ? $.evalFile(\\\"\" +\r\n      file +\r\n      '\") : fl.runScript(FLfile.platformPathToURI(\"' +\r\n      file +\r\n      '\"));',\r\n    true\r\n  );\r\n};\r\n\r\n/**\r\n * @function listenTS End-to-end Type-Safe ExtendScript to JavaScript Events\r\n * Uses the PlugPlug ExternalObject to trigger events in CEP panels\r\n * Function comes scoped to the panel's namespace to avoid conflicts\r\n * Simply declare your event name and value in the shared/universals.ts file\r\n * Listen for events with listenTS() in your CEP panel\r\n * Trigger those events with dispatchTS() ExtendScript\r\n * @param event The event name to listen for (defined in EventTS in shared/universals.ts)\r\n * @param callback The callback function to be executed when the event is triggered\r\n * @param isLocal Whether to scope the event to the panel's namespace. Defaults to true\r\n *\r\n * @example\r\n *\r\n * // 1. Declare Type in EventTS in shared/universals.ts\r\n * export type EventTS = {\r\n *  'myCustomEvent': {\r\n *   name: string;\r\n *   value: number;\r\n * }\r\n *  // [... other events]\r\n * };\r\n *\r\n * // 2. Listen in CEP\r\n * listenTS(\"myCustomEvent\", (data) => {\r\n *   console.log(\"name is\", data.name);\r\n *   console.log(\"value is\", data.value);\r\n * });\r\n *\r\n * // 3. Dispatch in ExtendScript\r\n * dispatchTS(\"myCustomEvent\", { name: \"name\", value: 20 });\r\n *\r\n */\r\nexport const listenTS = <Key extends string & keyof EventTS>(\r\n  event: Key,\r\n  callback: (data: EventTS[Key]) => void,\r\n  isLocal = true\r\n) => {\r\n  const fullEvent = isLocal ? `${ns}.${event}` : event;\r\n  const csi = new CSInterface();\r\n  // console.log(`listening to ${fullEvent}`);\r\n  const thisCallback = (e: { data: EventTS[Key] }) => {\r\n    callback(e.data);\r\n  };\r\n\r\n  // remove any existing listeners\r\n  csi.removeEventListener(fullEvent, thisCallback, null);\r\n  // add the event listener\r\n  csi.addEventListener(fullEvent, thisCallback);\r\n};\r\n\r\n/**\r\n * @function dispatchTS Displatches an event within or between CEP panels with Type-Safety\r\n * See listenTS() in the CEP panel for more info\r\n * @param event The event name to listen for (defined in EventTS in shared/universals.ts)\r\n * @param callback The callback function to be executed when the event is triggered\r\n * @param scope The scope of the event. Defaults to \"APPLICATION\"\r\n * @param appId The application ID. Defaults to the current application\r\n * @param id The extension ID. Defaults to the current extension\r\n * @param isLocal Whether to scope the event to the panel's namespace. Defaults to true\r\n */\r\nexport const dispatchTS = <Key extends string & keyof EventTS>(\r\n  event: Key,\r\n  data: EventTS[Key],\r\n  scope = \"APPLICATION\",\r\n  appId = csi.getApplicationID() as string,\r\n  id = csi.getExtensionID() as string,\r\n  isLocal = true\r\n) => {\r\n  const fullEvent = isLocal ? `${ns}.${event}` : event;\r\n  // console.log(`dispatching ${fullEvent}`);\r\n  const csEvent = new CSEvent(fullEvent, scope, appId, id);\r\n  csEvent.data = data;\r\n  csi.dispatchEvent(csEvent);\r\n};\r\n\r\n// js utils\r\n\r\nexport const initBolt = (log = true) => {\r\n  if (window.cep) {\r\n    const extRoot = csi.getSystemPath(\"extension\");\r\n    const jsxSrc = `${extRoot}/jsx/index.js`;\r\n    const jsxBinSrc = `${extRoot}/jsx/index.jsxbin`;\r\n    if (fs.existsSync(jsxSrc)) {\r\n      if (log) console.log(jsxSrc);\r\n      evalFile(jsxSrc);\r\n    } else if (fs.existsSync(jsxBinSrc)) {\r\n      if (log) console.log(jsxBinSrc);\r\n      evalFile(jsxBinSrc);\r\n    }\r\n  }\r\n};\r\n\r\nexport const posix = (str: string) => str.replace(/\\\\/g, \"/\");\r\n\r\nexport const openLinkInBrowser = (url: string) => {\r\n  if (window.cep) {\r\n    csi.openURLInDefaultBrowser(url);\r\n  } else {\r\n    location.href = url;\r\n  }\r\n};\r\n\r\nexport const getAppBackgroundColor = () => {\r\n  const { green, blue, red } = JSON.parse(\r\n    window.__adobe_cep__.getHostEnvironment() as string\r\n  ).appSkinInfo.panelBackgroundColor.color;\r\n  return {\r\n    rgb: {\r\n      r: red,\r\n      g: green,\r\n      b: blue,\r\n    },\r\n    hex: `#${red.toString(16)}${green.toString(16)}${blue.toString(16)}`,\r\n  };\r\n};\r\n\r\nexport const subscribeBackgroundColor = (callback: (color: string) => void) => {\r\n  const getColor = () => {\r\n    const newColor = getAppBackgroundColor();\r\n    console.log(\"BG Color Updated: \", { rgb: newColor.rgb });\r\n    const { r, g, b } = newColor.rgb;\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n  // get current color\r\n  callback(getColor());\r\n  // listen for changes\r\n  csi.addEventListener(\r\n    \"com.adobe.csxs.events.ThemeColorChanged\",\r\n    () => callback(getColor()),\r\n    {}\r\n  );\r\n};\r\n\r\n// vulcan\r\n\r\ndeclare type IVulcanMessageObject = {\r\n  event: string;\r\n  callbackID?: string;\r\n  data?: string | null;\r\n  payload?: object;\r\n};\r\n\r\nexport const vulcanSend = (id: string, msgObj: IVulcanMessageObject) => {\r\n  const msg = new VulcanMessage(VulcanMessage.TYPE_PREFIX + id, null, null);\r\n  const msgStr = JSON.stringify(msgObj);\r\n  msg.setPayload(msgStr);\r\n  vulcan.dispatchMessage(msg);\r\n};\r\n\r\nexport const vulcanListen = (id: string, callback: Function) => {\r\n  vulcan.addMessageListener(\r\n    VulcanMessage.TYPE_PREFIX + id,\r\n    (res: any) => {\r\n      var msgStr = vulcan.getPayload(res);\r\n      const msgObj = JSON.parse(msgStr);\r\n      callback(msgObj);\r\n    },\r\n    null\r\n  );\r\n};\r\n\r\nexport const isAppRunning = (targetSpecifier: string) => {\r\n  const { major, minor, micro } = csi.getCurrentApiVersion();\r\n  const version = parseFloat(`${major}.${minor}`);\r\n  if (version >= 11.2) {\r\n    return vulcan.isAppRunningEx(targetSpecifier.toUpperCase());\r\n  } else {\r\n    return vulcan.isAppRunning(targetSpecifier);\r\n  }\r\n};\r\n\r\ninterface IOpenDialogResult {\r\n  data: string[];\r\n}\r\nexport const selectFolder = (\r\n  dir: string,\r\n  msg: string,\r\n  callback: (res: string) => void\r\n) => {\r\n  const result = (\r\n    window.cep.fs.showOpenDialogEx || window.cep.fs.showOpenDialog\r\n  )(false, true, msg, dir) as IOpenDialogResult;\r\n  if (result.data?.length > 0) {\r\n    const folder = decodeURIComponent(result.data[0].replace(\"file://\", \"\"));\r\n    callback(folder);\r\n  }\r\n};\r\n\r\nexport const selectFile = (\r\n  dir: string,\r\n  msg: string,\r\n  callback: (res: string) => void\r\n) => {\r\n  const result = (\r\n    window.cep.fs.showOpenDialogEx || window.cep.fs.showOpenDialog\r\n  )(false, false, msg, dir) as IOpenDialogResult;\r\n  if (result.data?.length > 0) {\r\n    const folder = decodeURIComponent(result.data[0].replace(\"file://\", \"\"));\r\n    callback(folder);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Config, AudioBinding } from './types';\r\nconsole.log('main.tsx is being executed');\r\n\r\ndeclare global {\r\n    interface Window {\r\n        electron: {\r\n            ipcRenderer: {\r\n                send: (channel: string, data: any) => void;\r\n                on: (channel: string, func: (...args: any[]) => void) => void;\r\n                removeListener: (channel: string, func: (...args: any[]) => void) => void;\r\n            };\r\n        };\r\n    }\r\n}\r\n\r\n\r\nconst Main: React.FC = () => {\r\n    console.log('Main component is rendering');\r\n\r\n    const [config, setConfig] = useState<Config>({});\r\n    const [debugLog, setDebugLog] = useState<string[]>([]);\r\n    const [isAddingBinding, setIsAddingBinding] = useState(false);\r\n    const [isListeningForKey, setIsListeningForKey] = useState(false);\r\n    const isListeningForKeyRef = useRef(isListeningForKey);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const socketRef = useRef<WebSocket | null>(null);\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect hook is running');\r\n        startWebSocketConnection();\r\n        \r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socketRef.current) {\r\n            socketRef.current.onmessage = (event) => {\r\n                const data = event.data;\r\n                appendToDebugLog(`Received message: ${data}`);\r\n                \r\n                if (typeof data === 'string') {\r\n                    if (data.startsWith(\"CONFIG:\")) {\r\n                        const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\r\n                        setConfig(configData);\r\n                        appendToDebugLog('Config loaded successfully from server');\r\n                    } else if (data.startsWith(\"COMBO:\")) {\r\n                        const combo = data.replace(\"COMBO:\", \"\");\r\n                        appendToDebugLog(`Processed combo: ${combo}`);\r\n                        handleCombo(combo);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    \r\n    \r\n    const startWebSocketConnection = useCallback(() => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            appendToDebugLog(\"WebSocket already connected\");\r\n            return;\r\n        }\r\n    \r\n        appendToDebugLog(\"Establishing WebSocket connection...\");\r\n        socketRef.current = new WebSocket('ws://localhost:7878');\r\n    \r\n        socketRef.current.onopen = () => {\r\n            appendToDebugLog(\"Connected to Rust server\");\r\n            loadConfig(); // Load config after connection is established\r\n        };\r\n        \r\n        socketRef.current.onmessage = (event) => {\r\n            const data = event.data;\r\n            appendToDebugLog(`Received message: ${data}`);\r\n            \r\n            if (typeof data === 'string' && data.startsWith(\"CONFIG:\")) {\r\n                const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\r\n                setConfig(configData);\r\n                appendToDebugLog('Config loaded successfully from server');\r\n            }\r\n        };\r\n    \r\n        socketRef.current.onerror = (error: Event) => {\r\n            appendToDebugLog(`WebSocket Error: ${error instanceof ErrorEvent ? error.message : 'Unknown error'}`);\r\n        };\r\n    \r\n        socketRef.current.onclose = (event: CloseEvent) => {\r\n            appendToDebugLog(`Disconnected from Rust server: ${event.reason}`);\r\n            // Attempt to reconnect after a delay\r\n            setTimeout(startWebSocketConnection, 5000);\r\n        };\r\n    }, []);\r\n    \r\n\r\n    const appendToDebugLog = (message: string) => {\r\n        console.log('Debug log:', message);\r\n        setDebugLog(prevLog => [...prevLog, message]);\r\n    };\r\n\r\n    const loadConfig = () => {\r\n        console.log('Loading config');\r\n        try {\r\n            socketRef.current?.send('LOAD_CONFIG');\r\n        } catch (error: unknown) {\r\n            if (error instanceof Error) {\r\n                appendToDebugLog(`Error loading config: ${error.message}`);\r\n            } else {\r\n                appendToDebugLog(`Unexpected error loading config.`);\r\n            }\r\n            console.error('Error loading config:', error);\r\n        }\r\n    };\r\n\r\n    const saveConfig = (newConfig: Config) => {\r\n        try {\r\n            appendToDebugLog(`Sending config to server: ${JSON.stringify(newConfig)}`);\r\n            socketRef.current?.send(`SAVE_CONFIG:${JSON.stringify(newConfig)}`);\r\n            appendToDebugLog('Config sent successfully');\r\n            setConfig(newConfig); // Update the local state\r\n        } catch (error: unknown) {\r\n            if (error instanceof Error) {\r\n                appendToDebugLog(`Error saving config: ${error.message}`);\r\n            } else {\r\n                appendToDebugLog(`Unexpected error saving config.`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCombo = (combo: string) => {\r\n        const sortedCombo = combo.split('+').sort().join('+');\r\n        if (config[sortedCombo]) {\r\n            // Process the combo (e.g., play audio, trigger action)\r\n            appendToDebugLog(`Processing combo: ${sortedCombo}`);\r\n            // Add your logic here to handle the combo\r\n        } else {\r\n            appendToDebugLog(`Combo ${sortedCombo} not found in config`);\r\n        }\r\n    };\r\n    \r\n    \r\n    const stopListening = () => {\r\n        appendToDebugLog(\"Stopping key listener...\");\r\n        setIsListeningForKey(false);\r\n        isListeningForKeyRef.current = false;\r\n        appendToDebugLog(\"isListeningForKey set to false\");\r\n        setIsAddingBinding(false);\r\n        appendToDebugLog(\"isAddingBinding set to false\");\r\n    };\r\n    \r\n    const addNewKeyBind = useCallback((keyCombination: string) => {\r\n        appendToDebugLog(`Detected key combination: ${keyCombination}`);\r\n        const sortedCombination = keyCombination.split('+').sort().join('+');\r\n        appendToDebugLog(`Sorted key combination: ${sortedCombination}`);\r\n    \r\n        setConfig((prevConfig) => {\r\n            appendToDebugLog(`Current config: ${JSON.stringify(prevConfig)}`);\r\n            if (!prevConfig[sortedCombination]) {\r\n                const newConfig = {\r\n                    ...prevConfig,\r\n                    [sortedCombination]: { volume: 0, pitch: 0, track: 'A1', path: '' }\r\n                };\r\n                appendToDebugLog(`New config before saving: ${JSON.stringify(newConfig)}`);\r\n                saveConfig(newConfig);\r\n                appendToDebugLog(`Key binding ${sortedCombination} added to config.`);\r\n                stopListening(); // Stop listening after a keybind is successfully added\r\n                // Clear the WebSocket message handler for combo\r\n                if (socketRef.current) {\r\n                    socketRef.current.onmessage = (event) => {\r\n                        const data = event.data;\r\n                        appendToDebugLog(`Received message: ${data}`);\r\n                        \r\n                        if (typeof data === 'string' && data.startsWith(\"CONFIG:\")) {\r\n                            const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\r\n                            setConfig(configData);\r\n                            appendToDebugLog('Config loaded successfully from server');\r\n                        }\r\n                    };\r\n                }\r\n                return newConfig;\r\n            } else {\r\n                appendToDebugLog(`Key combination ${sortedCombination} already exists in config.`);\r\n                stopListening(); // Stop listening if the keybind already exists\r\n                return prevConfig;\r\n            }\r\n        });\r\n    }, [stopListening]);\r\n    \r\n\r\n    const startKeyListener = useCallback(() => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            appendToDebugLog(\"WebSocket connection is open. Starting key listener...\");\r\n            setIsListeningForKey(true);\r\n            isListeningForKeyRef.current = true;\r\n            appendToDebugLog(\"isListeningForKey set to true\");\r\n    \r\n            // Add the WebSocket onmessage handler for COMBO here\r\n            socketRef.current.onmessage = (event) => {\r\n                const data = event.data;\r\n                appendToDebugLog(`Received message: ${data}`);\r\n                \r\n                if (typeof data === 'string' && data.startsWith(\"COMBO:\")) {\r\n                    const combo = data.replace(\"COMBO:\", \"\");\r\n                    appendToDebugLog(`Processed combo: ${combo}`);\r\n                    addNewKeyBind(combo); // Process the received combo\r\n                }\r\n            };\r\n        } else {\r\n            appendToDebugLog(\"WebSocket connection is not open. Cannot start key listener.\");\r\n        }\r\n    }, [addNewKeyBind]);\r\n\r\n    \r\n\r\n    \r\n    \r\n    \r\n    const addBinding = () => {\r\n        if (!isListeningForKey) {\r\n            setIsAddingBinding(true);\r\n            appendToDebugLog(`Add binding clicked. isListeningForKey set to true`);\r\n            startKeyListener();\r\n        }\r\n    };\r\n\r\n    const selectAudioFile = (key: string) => {\r\n        appendToDebugLog(`Attempting to select audio file for key: ${key}`);\r\n        if (fileInputRef.current) {\r\n            appendToDebugLog(`File input reference is available.`);\r\n            fileInputRef.current.click();\r\n            fileInputRef.current.onchange = (event) => {\r\n                appendToDebugLog(`File input change event triggered.`);\r\n                const file = (event.target as HTMLInputElement).files?.[0];\r\n                if (file) {\r\n                    appendToDebugLog(`File selected: ${file.name}`);\r\n                    const filePath = (file as any).path || file.name;\r\n                    appendToDebugLog(`File path resolved to: ${filePath}`);\r\n                    updateBinding(key, { ...config[key], path: filePath });\r\n                    appendToDebugLog(`Selected audio file for ${key}: ${filePath}`);\r\n                } else {\r\n                    appendToDebugLog(`No file selected.`);\r\n                }\r\n            };\r\n        } else {\r\n            appendToDebugLog(`File input reference is not available.`);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const updateBinding = (key: string, value: AudioBinding) => {\r\n        setConfig((prevConfig: Config) => {\r\n            const newConfig = { ...prevConfig, [key]: value };\r\n            appendToDebugLog(`Updating config for key: ${key} with value: ${JSON.stringify(value)}`);\r\n            saveConfig(newConfig);\r\n            appendToDebugLog(`Binding updated for ${key}`);\r\n            return newConfig;\r\n        });\r\n    };\r\n\r\n\r\n    \r\n    const deleteBinding = (key: string) => {\r\n        setConfig((prevConfig: Config) => {\r\n            const { [key]: _, ...newConfig } = prevConfig;\r\n            appendToDebugLog(`Deleting binding for key: ${key}`);\r\n            saveConfig(newConfig);\r\n            appendToDebugLog(`Binding deleted for ${key}`);\r\n            return newConfig;\r\n        });\r\n    };\r\n\r\n    \r\n    const formatKeyCombination = (keyCombination: string): string => {\r\n        const keyMap: { [key: string]: string } = {\r\n            'LAlt': 'Alt',\r\n            'RAlt': 'Alt',\r\n            'LControl': 'Ctrl',\r\n            'RControl': 'Ctrl',\r\n            'ControlLeft': 'Ctrl',\r\n            'ControlRight': 'Ctrl',\r\n            'Numpad1': '1',\r\n            'Numpad2': '2',\r\n            'Numpad3': '3',\r\n            'Numpad4': '4',\r\n            'Numpad5': '5',\r\n            'Numpad6': '6',\r\n            'Numpad7': '7',\r\n            'Numpad8': '8',\r\n            'Numpad9': '9',\r\n            'Numpad0': '0',\r\n            // Add more key mappings as needed\r\n        };\r\n    \r\n        const priority = ['Ctrl', 'Shift', 'Alt'];\r\n\r\n        const sortedKeys = keyCombination\r\n            .split('+')\r\n            .map(key => keyMap[key] || key)\r\n            .sort((a, b) => {\r\n                const aIndex = priority.indexOf(a);\r\n                const bIndex = priority.indexOf(b);\r\n    \r\n                if (aIndex === -1 && bIndex === -1) return a.localeCompare(b);\r\n                if (aIndex === -1) return 1;\r\n                if (bIndex === -1) return -1;\r\n                return aIndex - bIndex;\r\n            });\r\n    \r\n        return sortedKeys.join('+');\r\n    };\r\n    \r\n    const extractFileName = (filePath: string): string => {\r\n        return filePath.split('\\\\').pop()?.split('/').pop() || ''; // Handles both Windows and Unix-style paths\r\n    };\r\n    \r\n\r\n    return (\r\n        <div style={{ fontFamily: 'Roboto, sans-serif', backgroundColor: '#1e2057', color: '#ffffff', padding: '10px' }}>\r\n            <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#2e2f77', borderRadius: '5px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        readOnly\r\n                        value={isListeningForKey ? 'Press a key combination...' : 'Click Add Binding to start'}\r\n                        style={{ width: '250px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px' }}\r\n                    />\r\n                    <button \r\n                        onClick={addBinding}\r\n                        disabled={isListeningForKey}\r\n                        style={{ \r\n                            width: '150px', \r\n                            padding: '6px', \r\n                            backgroundColor: isListeningForKey ? '#2e3177' : '#4e52ff', \r\n                            color: '#ffffff', \r\n                            borderRadius: '2px', \r\n                            border: 'none',\r\n                            cursor: isListeningForKey ? 'not-allowed' : 'pointer'\r\n                        }}\r\n                    >\r\n                        {isListeningForKey ? 'Listening...' : 'Add Binding'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    \r\n            {/* Hidden file input for audio selection */}\r\n            <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                accept=\"audio/*\"\r\n            />\r\n    \r\n            {/* Keybind Rows */}\r\n            <div>\r\n                {Object.keys(config).map((key) => (\r\n                    <div key={key} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', backgroundColor: '#2e2f77', padding: '10px', borderRadius: '5px' }}>\r\n                        <button \r\n                            onClick={() => deleteBinding(key)} \r\n                            style={{ \r\n                                width: '30px', \r\n                                height: '30px', \r\n                                padding: '6px', \r\n                                backgroundColor: 'transparent', \r\n                                color: '#ff5b3b', \r\n                                borderRadius: '50%', \r\n                                border: 'none', \r\n                                cursor: 'pointer', \r\n                                fontSize: '16px', \r\n                                display: 'flex', \r\n                                alignItems: 'center', \r\n                                justifyContent: 'center', \r\n                                marginRight: '10px'\r\n                            }}>\r\n                            ✖\r\n                        </button>\r\n                        <input type=\"text\" readOnly value={formatKeyCombination(key)} style={{ width: '70px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px', textAlign: 'center' }} />\r\n                        <button onClick={() => console.log(`Edit binding for ${key}`)} style={{ width: '50px', padding: '6px', backgroundColor: '#4e52ff', color: '#ffffff', borderRadius: '2px', border: 'none', marginRight: '10px' }}>Edit</button>\r\n                        <select \r\n                            value={config[key].track} \r\n                            onChange={(e) => updateBinding(key, { ...config[key], track: e.target.value })} \r\n                            style={{ width: '70px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }}\r\n                        >\r\n                            {Array.from({ length: 15 }, (_, i) => (\r\n                                <option key={i} value={`A${i + 1}`}>A{i + 1}</option>\r\n                            ))}\r\n                        </select>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly \r\n                            value={extractFileName(config[key].path)} \r\n                            style={{ width: '120px', padding: '7px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \r\n                        />\r\n                        <button \r\n                            onClick={() => selectAudioFile(key)} \r\n                            style={{ width: '120px', padding: '6px', backgroundColor: '#4e52ff', color: '#ffffff', borderRadius: '2px', border: 'none', marginRight: '10px' }}\r\n                        >\r\n                            Select audio...\r\n                        </button>\r\n                        <input \r\n                            type=\"number\" \r\n                            value={config[key].volume} \r\n                            onChange={(e) => updateBinding(key, { ...config[key], volume: parseInt(e.target.value) })} \r\n                            style={{ width: '30px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \r\n                        />\r\n                        <input \r\n                            type=\"number\" \r\n                            value={config[key].pitch} \r\n                            onChange={(e) => updateBinding(key, { ...config[key], pitch: parseInt(e.target.value) })} \r\n                            style={{ width: '30px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \r\n                        />\r\n                        <label style={{ display: 'flex', alignItems: 'center', marginLeft: '5px', justifyContent: 'center' }}>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                checked={config[key].importInMiddle || false} \r\n                                onChange={(e) => updateBinding(key, { ...config[key], importInMiddle: e.target.checked })} \r\n                                style={{ marginRight: '0px' }} \r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    \r\n};\r\n\r\nconsole.log('Exporting Main component');\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { initBolt } from \"../lib/utils/bolt\";\r\n\r\n\r\nimport Main from \"./main\";\r\n\r\ninitBolt();\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>\r\n);"],"names":["MenuItemStatus","menuItemLabel","enabled","checked","ContextMenuItemStatus","menuItemID","CSInterface","urlName","callback","xhr","err","pathName","OSVersion","pathType","path","script","result","appId","hostCapabilities","event","type","listener","obj","extensionId","params","extensionIds","extensionIdsStr","extensionsStr","extensions","networkPre","resourceBundle","resElms","n","resEl","resKey","key","resValue","attrKey","userAgent","winVersion","winBit","url","handler","apiVersion","menu","ret","itemStatus","width","height","keyEventsInterest","title","src","args","m","i","config","version","ns","fs","csi","evalES","isGlobal","resolve","reject","fullString","res","evalFile","file","initBolt","log","extRoot","jsxSrc","jsxBinSrc","Main","setConfig","useState","debugLog","setDebugLog","isAddingBinding","setIsAddingBinding","isListeningForKey","setIsListeningForKey","isListeningForKeyRef","useRef","fileInputRef","socketRef","useEffect","startWebSocketConnection","data","appendToDebugLog","configData","combo","handleCombo","useCallback","loadConfig","error","message","prevLog","_a","saveConfig","newConfig","sortedCombo","stopListening","addNewKeyBind","keyCombination","sortedCombination","prevConfig","startKeyListener","addBinding","selectAudioFile","filePath","updateBinding","value","deleteBinding","_","formatKeyCombination","keyMap","priority","a","b","aIndex","bIndex","extractFileName","jsxs","jsx","e","ReactDOM","React"],"mappings":"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"}