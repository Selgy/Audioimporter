{"version":3,"file":"main-e0cc9bc6.js","sources":["../../../src/js/main/main.tsx","../../../src/js/main/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Config, AudioBinding } from './types';\nconsole.log('main.tsx is being executed');\n\ndeclare global {\n    interface Window {\n        electron: {\n            ipcRenderer: {\n                send: (channel: string, data: any) => void;\n                on: (channel: string, func: (...args: any[]) => void) => void;\n                removeListener: (channel: string, func: (...args: any[]) => void) => void;\n            };\n        };\n    }\n}\n\n\nconst Main: React.FC = () => {\n    console.log('Main component is rendering');\n\n    const [config, setConfig] = useState<Config>({});\n    const [debugLog, setDebugLog] = useState<string[]>([]);\n    const [isAddingBinding, setIsAddingBinding] = useState(false);\n    const [isListeningForKey, setIsListeningForKey] = useState(false);\n    const isListeningForKeyRef = useRef(isListeningForKey);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const socketRef = useRef<WebSocket | null>(null);\n\n    useEffect(() => {\n        console.log('useEffect hook is running');\n        startWebSocketConnection();\n        \n        return () => {\n            if (socketRef.current) {\n                socketRef.current.close();\n            }\n        };\n    }, []);\n    \n    const startWebSocketConnection = useCallback(() => {\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n            appendToDebugLog(\"WebSocket already connected\");\n            return;\n        }\n    \n        appendToDebugLog(\"Establishing WebSocket connection...\");\n        socketRef.current = new WebSocket('ws://localhost:7878');\n    \n        socketRef.current.onopen = () => {\n            appendToDebugLog(\"Connected to Rust server\");\n            loadConfig(); // Load config after connection is established\n        };\n        \n        socketRef.current.onmessage = (event) => {\n            const data = event.data;\n            appendToDebugLog(`Received message: ${data}`);\n            \n            if (typeof data === 'string' && data.startsWith(\"CONFIG:\")) {\n                const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\n                setConfig(configData);\n                appendToDebugLog('Config loaded successfully from server');\n            }\n        };\n    \n        socketRef.current.onerror = (error: Event) => {\n            appendToDebugLog(`WebSocket Error: ${error instanceof ErrorEvent ? error.message : 'Unknown error'}`);\n        };\n    \n        socketRef.current.onclose = (event: CloseEvent) => {\n            appendToDebugLog(`Disconnected from Rust server: ${event.reason}`);\n            // Attempt to reconnect after a delay\n            setTimeout(startWebSocketConnection, 5000);\n        };\n    }, []);\n    \n\n    const appendToDebugLog = (message: string) => {\n        console.log('Debug log:', message);\n        setDebugLog(prevLog => [...prevLog, message]);\n    };\n\n    const loadConfig = () => {\n        console.log('Loading config');\n        try {\n            socketRef.current?.send('LOAD_CONFIG');\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                appendToDebugLog(`Error loading config: ${error.message}`);\n            } else {\n                appendToDebugLog(`Unexpected error loading config.`);\n            }\n            console.error('Error loading config:', error);\n        }\n    };\n\n    const saveConfig = (newConfig: Config) => {\n        try {\n            appendToDebugLog(`Sending config to server: ${JSON.stringify(newConfig)}`);\n            socketRef.current?.send(`SAVE_CONFIG:${JSON.stringify(newConfig)}`);\n            appendToDebugLog('Config sent successfully');\n            setConfig(newConfig); // Update the UI\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                appendToDebugLog(`Error saving config: ${error.message}`);\n            } else {\n                appendToDebugLog(`Unexpected error saving config.`);\n            }\n        }\n    };\n\n\n    \n    \n    const stopListening = () => {\n        appendToDebugLog(\"Stopping key listener...\");\n        setIsListeningForKey(false);\n        isListeningForKeyRef.current = false;\n        appendToDebugLog(\"isListeningForKey set to false\");\n        setIsAddingBinding(false);\n        appendToDebugLog(\"isAddingBinding set to false\");\n    };\n    \n    const addNewKeyBind = useCallback((keyCombination: string) => {\n        appendToDebugLog(`Detected key combination: ${keyCombination}`);\n        const sortedCombination = keyCombination.split('+').sort().join('+');\n        appendToDebugLog(`Sorted key combination: ${sortedCombination}`);\n    \n        setConfig((prevConfig) => {\n            appendToDebugLog(`Current config: ${JSON.stringify(prevConfig)}`);\n            if (!prevConfig[sortedCombination]) {\n                const newConfig = {\n                    ...prevConfig,\n                    [sortedCombination]: { volume: 0, pitch: 0, track: 'A1', path: '' }\n                };\n                appendToDebugLog(`New config before saving: ${JSON.stringify(newConfig)}`);\n                saveConfig(newConfig);\n                appendToDebugLog(`Key binding ${sortedCombination} added to config.`);\n                stopListening(); // Stop listening after a keybind is successfully added\n                // Clear the WebSocket message handler for combo\n                if (socketRef.current) {\n                    socketRef.current.onmessage = (event) => {\n                        const data = event.data;\n                        appendToDebugLog(`Received message: ${data}`);\n                        \n                        if (typeof data === 'string' && data.startsWith(\"CONFIG:\")) {\n                            const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\n                            setConfig(configData);\n                            appendToDebugLog('Config loaded successfully from server');\n                        }\n                    };\n                }\n                return newConfig;\n            } else {\n                appendToDebugLog(`Key combination ${sortedCombination} already exists in config.`);\n                stopListening(); // Stop listening if the keybind already exists\n                return prevConfig;\n            }\n        });\n    }, [stopListening]);\n    \n\n    const startKeyListener = useCallback(() => {\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n            appendToDebugLog(\"WebSocket connection is open. Starting key listener...\");\n            setIsListeningForKey(true);\n            isListeningForKeyRef.current = true;\n            appendToDebugLog(\"isListeningForKey set to true\");\n    \n            // Add the WebSocket onmessage handler for COMBO here\n            socketRef.current.onmessage = (event) => {\n                const data = event.data;\n                appendToDebugLog(`Received message: ${data}`);\n                \n                if (typeof data === 'string' && data.startsWith(\"COMBO:\")) {\n                    const combo = data.replace(\"COMBO:\", \"\");\n                    appendToDebugLog(`Processed combo: ${combo}`);\n                    addNewKeyBind(combo); // Process the received combo\n                }\n            };\n        } else {\n            appendToDebugLog(\"WebSocket connection is not open. Cannot start key listener.\");\n        }\n    }, [addNewKeyBind]);\n\n    \n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.onmessage = (event) => {\n                const data = event.data;\n                appendToDebugLog(`Received message: ${data}`);\n                \n                if (typeof data === 'string') {\n                    if (data.startsWith(\"CONFIG:\")) {\n                        const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\n                        setConfig(configData);\n                        appendToDebugLog('Config loaded successfully from server');\n                    } else if (data.startsWith(\"COMBO:\")) {\n                        const combo = data.replace(\"COMBO:\", \"\");\n                        appendToDebugLog(`Combo received: ${combo}`);\n                        handleCombo(combo); // Handle the combo here\n                    }\n                }\n            };\n        }\n    }, [config]);\n\n    const handleCombo = (combo: string) => {\n        appendToDebugLog(`Handling combo: ${combo}`);\n        \n        // Normalize the combo by sorting the keys\n        const normalizedCombo = combo.split('+').sort().join('+');\n        appendToDebugLog(`Normalized combo: ${normalizedCombo}`);\n        \n        if (config[normalizedCombo]) {\n            const binding = config[normalizedCombo];\n            if (binding.path) {\n                executePremiereProScript(binding.path, parseInt(binding.track.replace('A', ''), 10));\n            } else {\n                appendToDebugLog(`No path specified for combo: ${normalizedCombo}`);\n            }\n        } else {\n            appendToDebugLog(`Combo ${normalizedCombo} not found in config.`);\n        }\n    };\n    \n    \n    \n    \n    const addBinding = () => {\n        if (!isListeningForKey) {\n            setIsAddingBinding(true);\n            appendToDebugLog(`Add binding clicked. isListeningForKey set to true`);\n            startKeyListener();\n        }\n    };\n\n    const selectAudioFile = (key: string) => {\n        appendToDebugLog(`Attempting to select audio file for key: ${key}`);\n        if (fileInputRef.current) {\n            appendToDebugLog(`File input reference is available.`);\n            fileInputRef.current.click();\n            fileInputRef.current.onchange = (event) => {\n                appendToDebugLog(`File input change event triggered.`);\n                const file = (event.target as HTMLInputElement).files?.[0];\n                if (file) {\n                    appendToDebugLog(`File selected: ${file.name}`);\n                    const filePath = (file as any).path || file.name;\n                    appendToDebugLog(`File path resolved to: ${filePath}`);\n                    updateBinding(key, { ...config[key], path: filePath });\n                    appendToDebugLog(`Selected audio file for ${key}: ${filePath}`);\n                } else {\n                    appendToDebugLog(`No file selected.`);\n                }\n            };\n        } else {\n            appendToDebugLog(`File input reference is not available.`);\n        }\n    };\n\n    \n\n    const updateBinding = (key: string, value: AudioBinding) => {\n        setConfig((prevConfig: Config) => {\n            const newConfig = { ...prevConfig, [key]: value };\n            appendToDebugLog(`Updating config for key: ${key} with value: ${JSON.stringify(value)}`);\n            saveConfig(newConfig);\n            appendToDebugLog(`Binding updated for ${key}`);\n            return newConfig;\n        });\n    };\n\n\n    const executePremiereProScript = (filePath: string, track: number) => {\n        if (!filePath || isNaN(track)) {\n            alert(\"Invalid file path or track number.\");\n            return;\n        }\n    \n        const script = `\n            function importAudioToTrack(filePath, trackIndex) {\n                app.project.rootItem;\n                var activeSequence = app.project.activeSequence;\n                var importResult = app.project.importFiles([filePath], 1, app.project.rootItem, false);\n                var importedItem = app.project.rootItem.children[app.project.rootItem.children.numItems - 1];\n                var audioTrack = activeSequence.audioTracks[trackIndex - 1];\n                var time = activeSequence.getPlayerPosition();\n                var newClip = audioTrack.insertClip(importedItem, time.seconds);\n            }\n            importAudioToTrack(\"${filePath.replace(/\\\\/g, '\\\\\\\\')}\", ${track});\n        `;\n    \n        window.__adobe_cep__.evalScript(script, (result: string) => {\n        });\n    };\n    \n    const deleteBinding = (key: string) => {\n        setConfig((prevConfig: Config) => {\n            const { [key]: _, ...newConfig } = prevConfig;\n            appendToDebugLog(`Deleting binding for key: ${key}`);\n            saveConfig(newConfig);\n            appendToDebugLog(`Binding deleted for ${key}`);\n            return newConfig;\n        });\n    };\n\n    \n    const formatKeyCombination = (keyCombination: string): string => {\n        const keyMap: { [key: string]: string } = {\n            'LAlt': 'Alt',\n            'RAlt': 'Alt',\n            'LControl': 'Ctrl',\n            'RControl': 'Ctrl',\n            'ControlLeft': 'Ctrl',\n            'ControlRight': 'Ctrl',\n            'Numpad1': '1',\n            'Numpad2': '2',\n            'Numpad3': '3',\n            'Numpad4': '4',\n            'Numpad5': '5',\n            'Numpad6': '6',\n            'Numpad7': '7',\n            'Numpad8': '8',\n            'Numpad9': '9',\n            'Numpad0': '0',\n            // Add more key mappings as needed\n        };\n    \n        const priority = ['Ctrl', 'Shift', 'Alt'];\n\n        const sortedKeys = keyCombination\n            .split('+')\n            .map(key => keyMap[key] || key)\n            .sort((a, b) => {\n                const aIndex = priority.indexOf(a);\n                const bIndex = priority.indexOf(b);\n    \n                if (aIndex === -1 && bIndex === -1) return a.localeCompare(b);\n                if (aIndex === -1) return 1;\n                if (bIndex === -1) return -1;\n                return aIndex - bIndex;\n            });\n    \n        return sortedKeys.join('+');\n    };\n    \n    const extractFileName = (filePath: string): string => {\n        return filePath.split('\\\\').pop()?.split('/').pop() || ''; // Handles both Windows and Unix-style paths\n    };\n    \n\n    return (\n        <div style={{ fontFamily: 'Roboto, sans-serif', backgroundColor: '#1e2057', color: '#ffffff', padding: '10px' }}>\n            <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#2e2f77', borderRadius: '5px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <input\n                        type=\"text\"\n                        readOnly\n                        value={isListeningForKey ? 'Press a key combination...' : 'Click Add Binding to start'}\n                        style={{ width: '250px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px' }}\n                    />\n                    <button \n                        onClick={addBinding}\n                        disabled={isListeningForKey}\n                        style={{ \n                            width: '150px', \n                            padding: '6px', \n                            backgroundColor: isListeningForKey ? '#2e3177' : '#4e52ff', \n                            color: '#ffffff', \n                            borderRadius: '2px', \n                            border: 'none',\n                            cursor: isListeningForKey ? 'not-allowed' : 'pointer'\n                        }}\n                    >\n                        {isListeningForKey ? 'Listening...' : 'Add Binding'}\n                    </button>\n                </div>\n            </div>\n    \n            {/* Hidden file input for audio selection */}\n            <input\n                type=\"file\"\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                accept=\"audio/*\"\n            />\n    \n            {/* Keybind Rows */}\n            <div>\n                {Object.keys(config).map((key) => (\n                    <div key={key} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', backgroundColor: '#2e2f77', padding: '10px', borderRadius: '5px' }}>\n                        <button \n                            onClick={() => deleteBinding(key)} \n                            style={{ \n                                width: '30px', \n                                height: '30px', \n                                padding: '6px', \n                                backgroundColor: 'transparent', \n                                color: '#ff5b3b', \n                                borderRadius: '50%', \n                                border: 'none', \n                                cursor: 'pointer', \n                                fontSize: '16px', \n                                display: 'flex', \n                                alignItems: 'center', \n                                justifyContent: 'center', \n                                marginRight: '10px'\n                            }}>\n                            ✖\n                        </button>\n                        <input type=\"text\" readOnly value={formatKeyCombination(key)} style={{ width: '70px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px', textAlign: 'center' }} />\n                        <button onClick={() => console.log(`Edit binding for ${key}`)} style={{ width: '50px', padding: '6px', backgroundColor: '#4e52ff', color: '#ffffff', borderRadius: '2px', border: 'none', marginRight: '10px' }}>Edit</button>\n                        <select \n                            value={config[key].track} \n                            onChange={(e) => updateBinding(key, { ...config[key], track: e.target.value })} \n                            style={{ width: '70px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }}\n                        >\n                            {Array.from({ length: 15 }, (_, i) => (\n                                <option key={i} value={`A${i + 1}`}>A{i + 1}</option>\n                            ))}\n                        </select>\n                        <input \n                            type=\"text\" \n                            readOnly \n                            value={extractFileName(config[key].path)} \n                            style={{ width: '120px', padding: '7px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \n                        />\n                        <button \n                            onClick={() => selectAudioFile(key)} \n                            style={{ width: '120px', padding: '6px', backgroundColor: '#4e52ff', color: '#ffffff', borderRadius: '2px', border: 'none', marginRight: '10px' }}\n                        >\n                            Select audio...\n                        </button>\n                        <input \n                            type=\"number\" \n                            value={config[key].volume} \n                            onChange={(e) => updateBinding(key, { ...config[key], volume: parseInt(e.target.value) })} \n                            style={{ width: '30px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \n                        />\n                        <input \n                            type=\"number\" \n                            value={config[key].pitch} \n                            onChange={(e) => updateBinding(key, { ...config[key], pitch: parseInt(e.target.value) })} \n                            style={{ width: '30px', padding: '6px', backgroundColor: '#3e41a8', color: '#ffffff', border: 'none', borderRadius: '2px', marginRight: '10px' }} \n                        />\n                        <label style={{ display: 'flex', alignItems: 'center', marginLeft: '5px', justifyContent: 'center' }}>\n                            <input \n                                type=\"checkbox\" \n                                checked={config[key].importInMiddle || false} \n                                onChange={(e) => updateBinding(key, { ...config[key], importInMiddle: e.target.checked })} \n                                style={{ marginRight: '0px' }} \n                            />\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n    \n    \n};\n\nconsole.log('Exporting Main component');\nexport default Main;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { initBolt } from \"../lib/utils/bolt\";\r\n\r\n\r\nimport Main from \"./main\";\r\n\r\ninitBolt();\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["Main","config","setConfig","useState","debugLog","setDebugLog","isAddingBinding","setIsAddingBinding","isListeningForKey","setIsListeningForKey","isListeningForKeyRef","useRef","fileInputRef","socketRef","useEffect","startWebSocketConnection","useCallback","appendToDebugLog","loadConfig","event","data","configData","error","message","prevLog","_a","saveConfig","newConfig","stopListening","addNewKeyBind","keyCombination","sortedCombination","prevConfig","startKeyListener","combo","handleCombo","normalizedCombo","binding","executePremiereProScript","addBinding","selectAudioFile","key","file","filePath","updateBinding","value","track","script","result","deleteBinding","_","formatKeyCombination","keyMap","priority","a","b","aIndex","bIndex","extractFileName","jsxs","jsx","e","i","initBolt","ReactDOM","React"],"mappings":"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"}