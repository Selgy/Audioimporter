{"version":3,"file":"settings-7c936e36.js","sources":["../../../src/js/settings/index.js","../../../src/js/settings/main.tsx","../../../src/js/settings/index.tsx"],"sourcesContent":["const { spawn } = require('child_process');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nfunction startRustServer() {\r\n    console.log(\"Starting Rust server...\");\r\n    if (typeof process !== 'undefined' && process.versions != null && process.versions.node != null) {\r\n        console.log(\"Node.js environment detected. Node version:\", process.version);\r\n\r\n        // Use the specific path provided\r\n        const rustExecutablePath = 'E:\\\\DEV\\\\AudioImporter\\\\src\\\\target\\\\release\\\\audio_importer.exe';\r\n        console.log('Rust executable path:', rustExecutablePath);\r\n\r\n        // Check if the file exists\r\n        if (!fs.existsSync(rustExecutablePath)) {\r\n            console.error(`Rust executable not found at ${rustExecutablePath}`);\r\n            return;\r\n        }\r\n\r\n        const child = spawn(rustExecutablePath, [], {\r\n            cwd: path.dirname(rustExecutablePath), // Set working directory to executable's directory\r\n            env: process.env,\r\n            stdio: 'inherit',\r\n        });\r\n\r\n        child.on('error', (err) => {\r\n            console.error(`Failed to start Rust server: ${err}`);\r\n        });\r\n\r\n        child.on('close', (code) => {\r\n            if (code !== 0) {\r\n                console.error(`Rust server process exited with code ${code}`);\r\n            } else {\r\n                console.log('Rust server process exited successfully');\r\n            }\r\n        });\r\n    } else {\r\n        console.error('This script should only be run in a Node.js environment.');\r\n    }\r\n}\r\n\r\nconsole.log(\"Background script loaded. Starting Rust server...\");\r\nstartRustServer();\r\n\r\n// Add any other background tasks or message listeners here","import { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { Config, AudioBinding } from './types';\r\n\r\nconsole.log('main.tsx is being executed');\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        electron: {\r\n            ipcRenderer: {\r\n                send: (channel: string, data: any) => void;\r\n                on: (channel: string, func: (...args: any[]) => void) => void;\r\n                removeListener: (channel: string, func: (...args: any[]) => void) => void;\r\n            };\r\n        };\r\n        __adobe_cep__: {\r\n            evalScript: (script: string, callback?: (result: string) => void) => void;\r\n        };\r\n    }\r\n}\r\n\r\nconst Settings: React.FC = () => {\r\n    const socketRef = useRef<WebSocket | null>(null);\r\n    const configRef = useRef<any>({});\r\n    const [config, setConfig] = useState<Config>({});\r\n    const [debugLog, setDebugLog] = useState<string[]>([]);\r\n    const [isAddingBinding, setIsAddingBinding] = useState(false);\r\n    const [isListeningForKey, setIsListeningForKey] = useState(false);\r\n    const isListeningForKeyRef = useRef(isListeningForKey);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log('useEffect hook is running');\r\n        startWebSocketConnection();\r\n        \r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n    \r\n    const startWebSocketConnection = useCallback(() => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n            appendToDebugLog(\"WebSocket already connected\");\r\n            return;\r\n        }\r\n    \r\n        appendToDebugLog(\"Establishing WebSocket connection...\");\r\n        socketRef.current = new WebSocket('ws://localhost:7878');\r\n    \r\n        socketRef.current.onopen = () => {\r\n            appendToDebugLog(\"Connected to Rust server\");\r\n            loadConfig(); // Load config after connection is established\r\n        };\r\n        \r\n        socketRef.current.onmessage = (event) => {\r\n            const data = event.data;\r\n            appendToDebugLog(`Received message: ${data}`);\r\n            \r\n            if (typeof data === 'string' && data.startsWith(\"CONFIG:\")) {\r\n                const configData = JSON.parse(data.replace(\"CONFIG:\", \"\"));\r\n                setConfig(configData);\r\n                appendToDebugLog('Config loaded successfully from server');\r\n            }\r\n        };\r\n    \r\n        socketRef.current.onerror = (error: Event) => {\r\n            appendToDebugLog(`WebSocket Error: ${error instanceof ErrorEvent ? error.message : 'Unknown error'}`);\r\n        };\r\n    \r\n        socketRef.current.onclose = (event: CloseEvent) => {\r\n            appendToDebugLog(`Disconnected from Rust server: ${event.reason}`);\r\n            // Attempt to reconnect after a delay\r\n            setTimeout(startWebSocketConnection, 5000);\r\n        };\r\n    }, []);\r\n    \r\n    const appendToDebugLog = (message: string) => {\r\n        console.log('Debug log:', message);\r\n        setDebugLog(prevLog => [...prevLog, message]);\r\n    };\r\n\r\n    const loadConfig = () => {\r\n        try {\r\n            socketRef.current?.send('LOAD_CONFIG');\r\n        } catch (error: unknown) {\r\n            console.error('Error loading config:', error);\r\n            sendLogToPanel(`Error loading config: ${error}`);\r\n        }\r\n    };\r\n\r\n    const handleCombo = (combo: string) => {\r\n        console.log(`Handling combo: ${combo}`);\r\n        sendLogToPanel(`Handling combo: ${combo}`);\r\n\r\n        const normalizedCombo = combo.split('+').sort().join('+');\r\n        console.log(`Normalized combo: ${normalizedCombo}`);\r\n        sendLogToPanel(`Normalized combo: ${normalizedCombo}`);\r\n\r\n        if (configRef.current[normalizedCombo]) {\r\n            const binding = configRef.current[normalizedCombo];\r\n            if (binding.path) {\r\n                executePremiereProScript(binding.path, parseInt(binding.track.replace('A', ''), 10));\r\n            } else {\r\n                console.log(`No path specified for combo: ${normalizedCombo}`);\r\n                sendLogToPanel(`No path specified for combo: ${normalizedCombo}`);\r\n            }\r\n        } else {\r\n            console.log(`Combo ${normalizedCombo} not found in config.`);\r\n            sendLogToPanel(`Combo ${normalizedCombo} not found in config.`);\r\n        }\r\n    };\r\n\r\n    const executePremiereProScript = (filePath: string, track: number) => {\r\n        if (!filePath || isNaN(track)) {\r\n            console.error(\"Invalid file path or track number.\");\r\n            sendLogToPanel(\"Invalid file path or track number.\");\r\n            return;\r\n        }\r\n\r\n        const script = `\r\n            function importAudioToTrack(filePath, trackIndex) {\r\n                app.project.rootItem;\r\n                var activeSequence = app.project.activeSequence;\r\n                var importResult = app.project.importFiles([filePath], 1, app.project.rootItem, false);\r\n                var importedItem = app.project.rootItem.children[app.project.rootItem.children.numItems - 1];\r\n                var audioTrack = activeSequence.audioTracks[trackIndex - 1];\r\n                var time = activeSequence.getPlayerPosition();\r\n                var newClip = audioTrack.insertClip(importedItem, time.seconds);\r\n            }\r\n            importAudioToTrack(\"${filePath.replace(/\\\\/g, '\\\\\\\\')}\", ${track});\r\n        `;\r\n\r\n        window.__adobe_cep__.evalScript(script, (result: string) => {\r\n            console.log(`Script executed: ${result}`);\r\n            sendLogToPanel(`Script executed: ${result}`);\r\n        });\r\n    };\r\n\r\n    const sendLogToPanel = (message: string) => {\r\n        if (window.electron && window.electron.ipcRenderer) {\r\n            window.electron.ipcRenderer.send('background-log', message);\r\n        }\r\n    };\r\n\r\n    return null;\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { initBolt } from \"../lib/utils/bolt\";\r\n\r\n\r\nimport Main from \"./main\";\r\n\r\ninitBolt();\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["spawn","path","fs","startRustServer","rustExecutablePath","child","err","code","Settings","socketRef","useRef","config","setConfig","useState","debugLog","setDebugLog","isListeningForKey","setIsListeningForKey","useEffect","startWebSocketConnection","useCallback","appendToDebugLog","loadConfig","event","data","configData","error","message","prevLog","_a","sendLogToPanel","initBolt","ReactDOM","React","jsx","Main"],"mappings":"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"}