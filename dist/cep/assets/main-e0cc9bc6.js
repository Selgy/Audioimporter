"use strict";var exports = typeof exports === "undefined" ? {} : exports;;const r=typeof cep_node !== 'undefined'?cep_node.require(cep_node.global["__dir"+"name"] + "/assets/bolt-7ac16f3b.js"):require("../assets/bolt-7ac16f3b.js");console.log("main.tsx is being executed");const w=()=>{console.log("Main component is rendering");const[s,d]=r.reactExports.useState({}),[B,S]=r.reactExports.useState([]),[L,h]=r.reactExports.useState(!1),[l,C]=r.reactExports.useState(!1),y=r.reactExports.useRef(l),g=r.reactExports.useRef(null),i=r.reactExports.useRef(null);r.reactExports.useEffect(()=>(console.log("useEffect hook is running"),v(),()=>{i.current&&i.current.close()}),[]);const v=r.reactExports.useCallback(()=>{if(i.current&&i.current.readyState===WebSocket.OPEN){n("WebSocket already connected");return}n("Establishing WebSocket connection..."),i.current=new WebSocket("ws://localhost:7878"),i.current.onopen=()=>{n("Connected to Rust server"),N()},i.current.onmessage=e=>{const t=e.data;if(n(`Received message: ${t}`),typeof t=="string"&&t.startsWith("CONFIG:")){const o=JSON.parse(t.replace("CONFIG:",""));d(o),n("Config loaded successfully from server")}},i.current.onerror=e=>{n(`WebSocket Error: ${e instanceof ErrorEvent?e.message:"Unknown error"}`)},i.current.onclose=e=>{n(`Disconnected from Rust server: ${e.reason}`),setTimeout(v,5e3)}},[]),n=e=>{console.log("Debug log:",e),S(t=>[...t,e])},N=()=>{var e;console.log("Loading config");try{(e=i.current)==null||e.send("LOAD_CONFIG")}catch(t){t instanceof Error?n(`Error loading config: ${t.message}`):n("Unexpected error loading config."),console.error("Error loading config:",t)}},x=e=>{var t;try{n(`Sending config to server: ${JSON.stringify(e)}`),(t=i.current)==null||t.send(`SAVE_CONFIG:${JSON.stringify(e)}`),n("Config sent successfully"),d(e)}catch(o){o instanceof Error?n(`Error saving config: ${o.message}`):n("Unexpected error saving config.")}},m=()=>{n("Stopping key listener..."),C(!1),y.current=!1,n("isListeningForKey set to false"),h(!1),n("isAddingBinding set to false")},R=r.reactExports.useCallback(e=>{n(`Detected key combination: ${e}`);const t=e.split("+").sort().join("+");n(`Sorted key combination: ${t}`),d(o=>{if(n(`Current config: ${JSON.stringify(o)}`),o[t])return n(`Key combination ${t} already exists in config.`),m(),o;{const a={...o,[t]:{volume:0,pitch:0,track:"A1",path:""}};return n(`New config before saving: ${JSON.stringify(a)}`),x(a),n(`Key binding ${t} added to config.`),m(),i.current&&(i.current.onmessage=c=>{const p=c.data;if(n(`Received message: ${p}`),typeof p=="string"&&p.startsWith("CONFIG:")){const u=JSON.parse(p.replace("CONFIG:",""));d(u),n("Config loaded successfully from server")}}),a}})},[m]),$=r.reactExports.useCallback(()=>{i.current&&i.current.readyState===WebSocket.OPEN?(n("WebSocket connection is open. Starting key listener..."),C(!0),y.current=!0,n("isListeningForKey set to true"),i.current.onmessage=e=>{const t=e.data;if(n(`Received message: ${t}`),typeof t=="string"&&t.startsWith("COMBO:")){const o=t.replace("COMBO:","");n(`Processed combo: ${o}`),R(o)}}):n("WebSocket connection is not open. Cannot start key listener.")},[R]);r.reactExports.useEffect(()=>{i.current&&(i.current.onmessage=e=>{const t=e.data;if(n(`Received message: ${t}`),typeof t=="string"){if(t.startsWith("CONFIG:")){const o=JSON.parse(t.replace("CONFIG:",""));d(o),n("Config loaded successfully from server")}else if(t.startsWith("COMBO:")){const o=t.replace("COMBO:","");n(`Combo received: ${o}`),j(o)}}})},[s]);const j=e=>{n(`Handling combo: ${e}`);const t=e.split("+").sort().join("+");if(n(`Normalized combo: ${t}`),s[t]){const o=s[t];o.path?O(o.path,parseInt(o.track.replace("A",""),10)):n(`No path specified for combo: ${t}`)}else n(`Combo ${t} not found in config.`)},k=()=>{l||(h(!0),n("Add binding clicked. isListeningForKey set to true"),$())},I=e=>{n(`Attempting to select audio file for key: ${e}`),g.current?(n("File input reference is available."),g.current.click(),g.current.onchange=t=>{var a;n("File input change event triggered.");const o=(a=t.target.files)==null?void 0:a[0];if(o){n(`File selected: ${o.name}`);const c=o.path||o.name;n(`File path resolved to: ${c}`),f(e,{...s[e],path:c}),n(`Selected audio file for ${e}: ${c}`)}else n("No file selected.")}):n("File input reference is not available.")},f=(e,t)=>{d(o=>{const a={...o,[e]:t};return n(`Updating config for key: ${e} with value: ${JSON.stringify(t)}`),x(a),n(`Binding updated for ${e}`),a})},O=(e,t)=>{if(!e||isNaN(t)){alert("Invalid file path or track number.");return}const o=`
            function importAudioToTrack(filePath, trackIndex) {
                app.project.rootItem;
                var activeSequence = app.project.activeSequence;
                var importResult = app.project.importFiles([filePath], 1, app.project.rootItem, false);
                var importedItem = app.project.rootItem.children[app.project.rootItem.children.numItems - 1];
                var audioTrack = activeSequence.audioTracks[trackIndex - 1];
                var time = activeSequence.getPlayerPosition();
                var newClip = audioTrack.insertClip(importedItem, time.seconds);
            }
            importAudioToTrack("${e.replace(/\\/g,"\\\\")}", ${t});
        `;window.__adobe_cep__.evalScript(o,a=>{})},E=e=>{d(t=>{const{[e]:o,...a}=t;return n(`Deleting binding for key: ${e}`),x(a),n(`Binding deleted for ${e}`),a})},A=e=>{const t={LAlt:"Alt",RAlt:"Alt",LControl:"Ctrl",RControl:"Ctrl",ControlLeft:"Ctrl",ControlRight:"Ctrl",Numpad1:"1",Numpad2:"2",Numpad3:"3",Numpad4:"4",Numpad5:"5",Numpad6:"6",Numpad7:"7",Numpad8:"8",Numpad9:"9",Numpad0:"0"},o=["Ctrl","Shift","Alt"];return e.split("+").map(c=>t[c]||c).sort((c,p)=>{const u=o.indexOf(c),b=o.indexOf(p);return u===-1&&b===-1?c.localeCompare(p):u===-1?1:b===-1?-1:u-b}).join("+")},F=e=>{var t;return((t=e.split("\\").pop())==null?void 0:t.split("/").pop())||""};return r.jsxs("div",{style:{fontFamily:"Roboto, sans-serif",backgroundColor:"#1e2057",color:"#ffffff",padding:"10px"},children:[r.jsx("div",{style:{marginBottom:"15px",padding:"10px",backgroundColor:"#2e2f77",borderRadius:"5px"},children:r.jsxs("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[r.jsx("input",{type:"text",readOnly:!0,value:l?"Press a key combination...":"Click Add Binding to start",style:{width:"250px",padding:"6px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px"}}),r.jsx("button",{onClick:k,disabled:l,style:{width:"150px",padding:"6px",backgroundColor:l?"#2e3177":"#4e52ff",color:"#ffffff",borderRadius:"2px",border:"none",cursor:l?"not-allowed":"pointer"},children:l?"Listening...":"Add Binding"})]})}),r.jsx("input",{type:"file",ref:g,style:{display:"none"},accept:"audio/*"}),r.jsx("div",{children:Object.keys(s).map(e=>r.jsxs("div",{style:{display:"flex",alignItems:"center",marginBottom:"10px",backgroundColor:"#2e2f77",padding:"10px",borderRadius:"5px"},children:[r.jsx("button",{onClick:()=>E(e),style:{width:"30px",height:"30px",padding:"6px",backgroundColor:"transparent",color:"#ff5b3b",borderRadius:"50%",border:"none",cursor:"pointer",fontSize:"16px",display:"flex",alignItems:"center",justifyContent:"center",marginRight:"10px"},children:"âœ–"}),r.jsx("input",{type:"text",readOnly:!0,value:A(e),style:{width:"70px",padding:"6px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px",marginRight:"10px",textAlign:"center"}}),r.jsx("button",{onClick:()=>console.log(`Edit binding for ${e}`),style:{width:"50px",padding:"6px",backgroundColor:"#4e52ff",color:"#ffffff",borderRadius:"2px",border:"none",marginRight:"10px"},children:"Edit"}),r.jsx("select",{value:s[e].track,onChange:t=>f(e,{...s[e],track:t.target.value}),style:{width:"70px",padding:"6px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px",marginRight:"10px"},children:Array.from({length:15},(t,o)=>r.jsxs("option",{value:`A${o+1}`,children:["A",o+1]},o))}),r.jsx("input",{type:"text",readOnly:!0,value:F(s[e].path),style:{width:"120px",padding:"7px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px",marginRight:"10px"}}),r.jsx("button",{onClick:()=>I(e),style:{width:"120px",padding:"6px",backgroundColor:"#4e52ff",color:"#ffffff",borderRadius:"2px",border:"none",marginRight:"10px"},children:"Select audio..."}),r.jsx("input",{type:"number",value:s[e].volume,onChange:t=>f(e,{...s[e],volume:parseInt(t.target.value)}),style:{width:"30px",padding:"6px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px",marginRight:"10px"}}),r.jsx("input",{type:"number",value:s[e].pitch,onChange:t=>f(e,{...s[e],pitch:parseInt(t.target.value)}),style:{width:"30px",padding:"6px",backgroundColor:"#3e41a8",color:"#ffffff",border:"none",borderRadius:"2px",marginRight:"10px"}}),r.jsx("label",{style:{display:"flex",alignItems:"center",marginLeft:"5px",justifyContent:"center"},children:r.jsx("input",{type:"checkbox",checked:s[e].importInMiddle||!1,onChange:t=>f(e,{...s[e],importInMiddle:t.target.checked}),style:{marginRight:"0px"}})})]},e))})]})};console.log("Exporting Main component");r.initBolt();r.client.createRoot(document.getElementById("root")).render(r.jsx(r.React.StrictMode,{children:r.jsx(w,{})}));
//# sourceMappingURL=main-e0cc9bc6.js.map
